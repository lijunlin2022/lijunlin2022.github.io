import{_ as i,c as a,ae as t,o}from"./chunks/framework.BzDBnRMZ.js";const r="/assets/negative-margin1.DZbnK293.jpg",n="/assets/negative-margin2.CBUv5Mxf.jpg",c="/assets/negative-margin3.BqgAAsoS.jpg",d="/assets/negative-margin4.8JrwFXBZ.jpg",l="/assets/negative-margin5.ChPBFMh7.jpg",s="/assets/negative-margin6.D1xQ9Jny.jpg",g="/assets/negative-margin7.CCqF1QYb.jpg",x=JSON.parse('{"title":"margin 负值","description":"","frontmatter":{},"headers":[],"relativePath":"docs/css/negative-margin/index.md","filePath":"docs/css/negative-margin/index.md"}'),m={name:"docs/css/negative-margin/index.md"};function p(h,e,_,u,f,b){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="margin-负值" tabindex="-1">margin 负值 <a class="header-anchor" href="#margin-负值" aria-label="Permalink to &quot;margin 负值&quot;">​</a></h1><h2 id="规律总结" tabindex="-1">规律总结 <a class="header-anchor" href="#规律总结" aria-label="Permalink to &quot;规律总结&quot;">​</a></h2><h3 id="元素有自身宽度时" tabindex="-1">元素有自身宽度时 <a class="header-anchor" href="#元素有自身宽度时" aria-label="Permalink to &quot;元素有自身宽度时&quot;">​</a></h3><ul><li><code>margin-top</code> 负值，元素向上移动</li><li><code>margin-bottom</code> 负值，元素自身不受影响，下方元素向上移动</li><li><code>margin-left</code> 负值，元素向左移动</li><li><code>marginright</code> 负值，元素自身不受影响，右侧元素向左移动</li></ul><p>表现如下方的四幅图：</p><ul><li><p><code>margin-top</code> 负值</p><p><img src="'+r+'" alt=""></p></li><li><p><code>margin-bottom</code> 负值</p><p><img src="'+n+'" alt=""></p></li><li><p><code>margin-left</code> 负值</p><p><img src="'+c+'" alt=""></p></li><li><p><code>margin-right</code> 负值</p><p><img src="'+d+'" alt=""></p></li></ul><h3 id="元素没有自身宽度-即-width-auto-时" tabindex="-1">元素没有自身宽度, 即 <code>width:auto;</code> 时 <a class="header-anchor" href="#元素没有自身宽度-即-width-auto-时" aria-label="Permalink to &quot;元素没有自身宽度, 即 `width:auto;` 时&quot;">​</a></h3><ul><li><code>margin-top</code> 负值，元素向上移动</li><li><code>margin-bottom</code> 负值，元素自身不受影响，下方元素向上移动</li><li><code>margin-left</code> 负值，元素宽度向左变宽</li><li><code>margin-right</code> 负值，元素宽度向右变宽</li></ul><blockquote><p>这是因为设置元素宽度为 auto 后</p><p><code>左右 margin + 左右 border + 左右 padding + width = 父元素 width</code></p><p>当 <code>margin-left</code> 或 <code>margin-right</code> 取负值后，为了完成等式，width 会相应地向 left 或 right 方向增加</p></blockquote><p><code>margin-top</code> 和 <code>margin-bottom</code> 的表现和 1.1 一致，所以下面仅展示 <code>margin-left</code> 和 <code>margin-right</code> 的值</p><ul><li><p><code>margin-left</code> 负值</p><p><img src="'+l+'" alt=""></p></li><li><p><code>margin-right</code> 负值</p><p><img src="'+s+'" alt=""></p></li></ul><h2 id="margin-负值的应用" tabindex="-1">margin 负值的应用 <a class="header-anchor" href="#margin-负值的应用" aria-label="Permalink to &quot;margin 负值的应用&quot;">​</a></h2><ul><li>子绝父相 + margin 负值实现水平垂直居中</li></ul><p><code>子绝父相</code> 即子元素用绝对定位，父元素用相对定位。</p><p>如下图所示：</p><p><img src="'+g+'" alt=""></p>',16)]))}const v=i(m,[["render",p]]);export{x as __pageData,v as default};
