import{_ as a,c as t,ae as s,o as i}from"./chunks/framework.BzDBnRMZ.js";const l="/assets/pdd.DuGb6D9t.gif",n="/assets/scroll-left.LG48_nio.png",h="/assets/calculate-scroll-left.ChlpZ3tf.png",g=JSON.parse('{"title":"H5、小程序 Tab 如何滚动居中？","description":"","frontmatter":{"tags":["H5","小程序"]},"headers":[],"relativePath":"blog/2023/07/30/index.md","filePath":"blog/2023/07/30/index.md"}'),d={name:"blog/2023/07/30/index.md"};function o(r,e,p,c,k,f){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="h5、小程序-tab-如何滚动居中" tabindex="-1">H5、小程序 Tab 如何滚动居中？ <a class="header-anchor" href="#h5、小程序-tab-如何滚动居中" aria-label="Permalink to &quot;H5、小程序 Tab 如何滚动居中？&quot;">​</a></h1><p>Tab 在 PC 端、移动端应用都上很常见，不过 Tab 在移动端 比 PC 端更复杂。为什么呢？移动端设备屏幕较窄，一般仅能展示 4 ~ 7 个 Item。考虑到用户体验，UI 往往要求程序员实现一个功能——点击 Item 后，Item 滚动到屏幕中央，拼多多的 Tab 就实现了这个功能。</p><p><img src="'+l+'" alt=""></p><p>如果你也想实现这个功能，看了这篇文章，你一定会有所收获。我会先说明 Tab 滚动的本质，分析出滚动距离的计算公式，接着给出伪代码，最后再给出 Vue、React 和微信小程序的示例代码。</p><h2 id="tab-滚动的本质" tabindex="-1">Tab 滚动的本质 <a class="header-anchor" href="#tab-滚动的本质" aria-label="Permalink to &quot;Tab 滚动的本质&quot;">​</a></h2><p>Tab 滚动，本质是包裹着 Item 的容器在滚动。</p><p>如下图，竖着的虚线长方形代表手机屏幕，横着的长方形代表 Tab 的容器，标着数字的小正方形代表一个个 Tab Item。</p><p>左半部分中，Tab 容器紧贴手机屏幕左侧。右半部分中，Item 4 位于屏幕中央，两部分表示 Item 4 从屏幕右边滚动到屏幕中央。</p><p><img src="'+n+'" alt=""></p><p>不难看出，Item 4 滚动居中，其实就是容器向左移动 distance。此时容器滚动条到容器左边缘的距离也是 distance。</p><p>换句话说，<strong>让容器向左移动 distance，Item 4 就能居中。</strong> 因此只要你能找出计算 distance 的公式，就能控制某个 Item 居中。</p><h2 id="计算-distance-的公式" tabindex="-1">计算 distance 的公式 <a class="header-anchor" href="#计算-distance-的公式" aria-label="Permalink to &quot;计算 distance 的公式&quot;">​</a></h2><p>该如何计算 distance 呢？你看下方这张更细致的示意图。</p><p>屏幕中央有一条线，它把 Item 4 分成了左右等宽的两部分，也把手机屏幕分成了左右等宽的两部分。你可以把 Item 4 一半的宽度记为 <code>halfItemWidth</code>，把手机屏幕一半的宽度记为 <code>halfScreenWidth</code>。再把 Item 4 左侧到容器左侧的距离记为 <code>itemOffsetLeft</code>。</p><p><img src="'+h+`" alt=""></p><p>不难看出，这四个值满足如下等式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>distance + halfScreenWidth = itemOffsetLeft + halfItemWidth</span></span></code></pre></div><p>简单推导一下，就得到了计算 distance 的公式。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>distance = itemOffsetLeft + halfItemWidth - halfScreenWidth</span></span></code></pre></div><h2 id="公式的伪代码实现" tabindex="-1">公式的伪代码实现 <a class="header-anchor" href="#公式的伪代码实现" aria-label="Permalink to &quot;公式的伪代码实现&quot;">​</a></h2><p>现在开始解释公式的代码实现。</p><p>先看下 <code>itemOffsetLeft</code>、<code>halfItemWidth</code> 和 <code>halfScreenWidth</code> 如何获取。</p><ul><li><p><code>itemOffsetLeft</code> 是 Item 元素到容器左侧的距离，你可以用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetLeft" target="_blank" rel="noreferrer">HTMLElement.offsetLeft</a> 作它的值。</p></li><li><p><code>halfItemWidth</code> 是 Item 元素一半的宽度。<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/offsetWidth" target="_blank" rel="noreferrer">HTMLElement.offsetWidth</a> 是元素的整体宽度，你可以用 <code>offsetWidth / 2</code> 作它的值，也可以先用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getBoundingClientRect" target="_blank" rel="noreferrer">Element.getBoundingClientRect()</a> 获取一个 <code>itemRect</code> 对象，再用 <code>itemRect.width / 2</code> 作它的值。</p></li><li><p><code>halfScreenWidth</code> 是手机屏幕一半的宽度。 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/innerWidth" target="_blank" rel="noreferrer">window.innerWidth</a> 是手机屏幕的整体宽度，你可以用 <code>innerWidth / 2</code> 作它的值。</p></li></ul><p>再看下如何把 distance 设置到容器上。</p><p>在 HTML 中，你可以使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollLeft" target="_blank" rel="noreferrer">Element.scrollLeft</a> 来读取和设置元素滚动条到元素左边的位置。因此，你只需要容器的 <code>scrollLeft</code> 赋值为 distance，就可以实现 Item 元素滚动居中。</p><p>现在给出点击 tab 的函数的伪代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> itemOffsetLeft</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.offsetLeft;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> halfItemWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.offsetWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> halfScreenWidth</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.innerWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabContainer.scrollLeft </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> itemOffsetLeft </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> halfItemWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> halfScreenWidth</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h2><h3 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h3><p><a href="https://codesandbox.io/p/sandbox/vue-tab-scroll-to-center-qxw4vc" target="_blank" rel="noreferrer">Tab 滚动居中 | Vue</a></p><h3 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">​</a></h3><p><a href="https://codesandbox.io/p/sandbox/react-tab-scroll-to-center-22939z" target="_blank" rel="noreferrer">Tab 滚动居中 | React</a></p><h3 id="微信小程序" tabindex="-1">微信小程序 <a class="header-anchor" href="#微信小程序" aria-label="Permalink to &quot;微信小程序&quot;">​</a></h3><p><a href="https://developers.weixin.qq.com/s/npBjVpmj7XKc" target="_blank" rel="noreferrer">Tab 滚动居中 | 微信小程序</a></p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>小程序的 API 和浏览器的 API 有差异。</p><ul><li><code>itemOffsetLeft</code> ，你需要从点击事件的 <code>event.currentTarget</code> 中获取。</li><li><code>halfItemWidth</code>，你需要先用 <code>wx.createSelectorQuery()</code> 选取到 Item 后，从 <code>exec()</code> 的执行结果中获取到 Item 整体宽度，然后再除以 2。</li><li><code>halfScreenWidth</code>，你需要先用 <code>wx.getSystemInfoSync()</code> 获取屏幕整体宽度，然后再除以 2。</li></ul><p>至于把 <code>distance</code> 设置到容器上，微信小程序 <code>scroll-view</code> 组件中，有 <code>scroll-left</code> 这个属性，你可以把 <code>distance</code> 赋值给 <code>scroll-left</code>。</p></div>`,35)]))}const b=a(d,[["render",o]]);export{g as __pageData,b as default};
