import{_ as a,c as i,ae as p,o as e}from"./chunks/framework.BzDBnRMZ.js";const t="/assets/dragon-troubles-the-sea.CG-HeYjK.gif",l="/assets/sea.BvRaypzy.png",n="/assets/sea.qbEkCtZN.gif",h="/assets/wave.DmDbJI7p.gif",o="/assets/clippy-dragon.DiVJ3_f-.jpg",r="/assets/cloud-border.Dl2SrQRd.png",d="/assets/cloud-fill.e50Ombyc.png",x=JSON.parse('{"title":"H5 蛟龙闹海动画如何实现（不引用图片）？","description":"","frontmatter":{"tags":["H5"]},"headers":[],"relativePath":"blog/2024/02/09/index.md","filePath":"blog/2024/02/09/index.md"}'),c={name:"blog/2024/02/09/index.md"};function k(g,s,E,b,_,m){return e(),i("div",null,s[0]||(s[0]=[p('<h1 id="h5-蛟龙闹海动画如何实现-不引用图片" tabindex="-1">H5 蛟龙闹海动画如何实现（不引用图片）？ <a class="header-anchor" href="#h5-蛟龙闹海动画如何实现-不引用图片" aria-label="Permalink to &quot;H5 蛟龙闹海动画如何实现（不引用图片）？&quot;">​</a></h1><p>龙年要到了，祝大家在新的一年里，如龙腾飞、事业有成；如龙入海、财源广进。</p><p>我使用 HTML 和 CSS 实现了一个蛟龙闹海效果。</p><p><img src="'+t+'" alt=""></p><p>它很简略，但是代码中我没有引用图片，我是怎么做的呢？</p><p>下面我会从下往上、依次解释如何实现海浪、龙和云朵，接着我会给出整体代码，最后，我会做一个简单总结。</p><h2 id="海浪如何实现" tabindex="-1">海浪如何实现 <a class="header-anchor" href="#海浪如何实现" aria-label="Permalink to &quot;海浪如何实现&quot;">​</a></h2><p>我使用 2 个不同 border-radius 圆角的正方形实现了海浪效果。首先，我实现了一个圆形和两个圆角正方形，然后把两个圆角正方形移动到圆形的底部。</p><p><img src="'+l+'" alt=""></p><p>然后，我给圆角正方形添加旋转动画，</p><p><img src="'+n+'" alt=""></p><p>之后给圆形添加 <code>overflow: hidden;</code>，就可以得到海浪效果。</p><p><img src="'+h+'" alt=""></p><h2 id="龙如何实现" tabindex="-1">龙如何实现 <a class="header-anchor" href="#龙如何实现" aria-label="Permalink to &quot;龙如何实现&quot;">​</a></h2><p>再看下龙如何实现，我使用 <code>clip-path</code> 实现了龙的效果。</p><p><code>clip-path</code> 是 CSS 一个属性，可以裁剪元素。裁剪区域内的显示，区域外的隐藏。可以利用 <code>ploygon()</code> 定义多个顶点，连接好后就成为了多边形。</p><p>我裁剪了 10 个多边形，组合成了龙。其中 1 个 8 边形是龙头、1 个 4 边形是眼睛、2 个 5 边形是龙角、4 个 4 边形是鬃毛，还有 1 个 12 边形是脖子、1 个 12 边形是肚子。</p><p>不过，以我的设计经验，肯定是没办法轻松裁剪出这些多边形的，我使用了 <a href="https://www.jiangweishan.com/tool/clippy/" target="_blank" rel="noreferrer">clippy</a> 这个工具，这个工具可以像描图一样把多边形裁剪出来。</p><p><img src="'+o+'" alt=""></p><p>理论上裁剪得越精细，多边形数量越多，描边的龙就越像。这是纯粹的体力活，我这里偷个懒，只裁剪出大概的形状。</p><h2 id="云朵如何实现" tabindex="-1">云朵如何实现 <a class="header-anchor" href="#云朵如何实现" aria-label="Permalink to &quot;云朵如何实现&quot;">​</a></h2><p>实现了龙，我们再看下云朵如何实现，我使用 6 个圆重叠形成了云朵。</p><p>简单画 6 个圆，如下所示：</p><p><img src="'+r+'" alt=""></p><p>只要将这些圆的边框全部变透明，再填充上颜色，就可以得到一朵云。</p><p><img src="'+d+`" alt=""></p><p>我没有创建 6 个 div 元素然后叠加，而是使用了 box-shadow 来实现。box-shadow 最多有五个参数。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* x 偏移量 | y 偏移量 | 阴影模糊半径 | 阴影扩散半径 | 阴影颜色 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 2px 2px 2px 1px rgba(0, 0, 0, 0</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>不需要阴影模糊半径和阴影扩散半径，只需要设置 x 偏移量和 y 偏移量，就可以实现圆形的偏移：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">box-shadow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  10px 5px 0 0 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#ddd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  10px -5px 0 0 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#ddd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  20px 6px 0 0 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#ddd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  20px 0 0 0 </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#ddd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  30px 0px 0 0 </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">#ddd;</span></span></code></pre></div><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><p>现在，我们看完整代码：</p><p><a href="https://codepen.io/lijunlin2022/pen/abQewmE" target="_blank" rel="noreferrer">蛟龙闹海 | codepen</a></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文我们利用 HTML 和 CSS 实现了一个蛟龙闹海效果。其中：</p><ol><li>海浪，可以使用两个旋转的圆角正方形实现。</li><li>龙，可以使用 clip-path 裁剪多边形，再拼接多边形实现。</li><li>云朵，不需要创建多个元素，可以使用 box-shadow 并设置多组值实现。</li></ol>`,36)]))}const u=a(c,[["render",k]]);export{x as __pageData,u as default};
