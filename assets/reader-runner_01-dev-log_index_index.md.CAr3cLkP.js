import{_ as t,c as a,ae as r,o as s}from"./chunks/framework.BzDBnRMZ.js";const n="/assets/es5-ext-string-contains.DrJI6yd7.png",o="/assets/epub-dependency.q1mt4U5w.png",p="/assets/2024-07-24.BaU8e8RS.png",i="/assets/2024-07-25.CV7lAF4t.png",f=JSON.parse('{"title":"开发日志","description":"","frontmatter":{},"headers":[],"relativePath":"reader-runner/01-dev-log/index/index.md","filePath":"reader-runner/01-dev-log/index/index.md"}'),l={name:"reader-runner/01-dev-log/index/index.md"};function d(h,e,u,c,m,b){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="开发日志" tabindex="-1">开发日志 <a class="header-anchor" href="#开发日志" aria-label="Permalink to &quot;开发日志&quot;">​</a></h1><h2 id="_2024-07-24" tabindex="-1">2024.07.24 <a class="header-anchor" href="#_2024-07-24" aria-label="Permalink to &quot;2024.07.24&quot;">​</a></h2><h3 id="epub-的错误" tabindex="-1">Epub 的错误 <a class="header-anchor" href="#epub-的错误" aria-label="Permalink to &quot;Epub 的错误&quot;">​</a></h3><p><img src="'+n+'" alt=""></p><p>它的依赖关系是，epubjs 依赖了 event-emitter，而 event-emitter 又依赖了 es5-ext，而 es5-ext 中，它的文件路径中包含了一个 # 号。</p><p>epubjs 底层的依赖非常混乱。在我看来，它的 lodash、es5-ext 还有 d 都是重复的，完全可以优化。</p><p><a href="https://github.com/webpack/enhanced-resolve/issues/282" target="_blank" rel="noreferrer">https://github.com/webpack/enhanced-resolve/issues/282</a></p><p>我猜测是因为 epubjs 一直迭代，然后后面维护的人已经开始使用 es5 和 es6 的语法了，但是又不愿意重构之前的代码，就演变成这个样子了。</p><p>于是我干脆把 epubjs 拷贝了一份，然后把它依赖的 es5-ext 和 d 都拷贝整理了一份。</p><p>最终我认为，epubjs 实际需要的依赖只有 3 个：@xmldom/xmldom 和 jszip 和 lodash。</p><p>它的其他依赖，完全可以自己手写代替：</p><p><img src="'+o+'" alt=""></p><h3 id="小程序上解析错误" tabindex="-1">小程序上解析错误 <a class="header-anchor" href="#小程序上解析错误" aria-label="Permalink to &quot;小程序上解析错误&quot;">​</a></h3><p>因为 epubjs 自己用 XMLHttpRequest 实现了请求。</p><p>此外 event-emitter 太离谱了，竟然已经三年没更新了</p><p><a href="https://github.com/medikoo/event-emitter" target="_blank" rel="noreferrer">https://github.com/medikoo/event-emitter</a></p><p><img src="'+p+'" alt=""></p><h2 id="_2024-07-25" tabindex="-1">2024.07.25 <a class="header-anchor" href="#_2024-07-25" aria-label="Permalink to &quot;2024.07.25&quot;">​</a></h2><p>设置字体大小、字体</p><p>epubjs 的 rendition 内部有一个 themes，通过设置 themes 的 fontSize 和 font，我们可以改变字体大小、字体。</p><p><a href="http://epubjs.org/documentation/0.3/#themes" target="_blank" rel="noreferrer">http://epubjs.org/documentation/0.3/#themes</a></p><p><img src="'+i+'" alt=""></p><p>epubjs 通过 ePub 生成的 book，book 可以通过 loaded 上的属性获取解析的结果：</p><ul><li>metadata 可以获取标题相关数据</li><li>navigation 可以获取导航相关数据</li></ul><h2 id="_2024-07-26" tabindex="-1">2024.07.26 <a class="header-anchor" href="#_2024-07-26" aria-label="Permalink to &quot;2024.07.26&quot;">​</a></h2><p>尝试用 class 替换掉 event-emitter，发现替换后原本的方法我不会用了。</p><p>关于 class 和 function 原型的关系，我还比较模糊。</p><p>一番折腾下来，运行失败了，代码倒是大致看明白了。</p><h2 id="_2027-07-27" tabindex="-1">2027.07.27 <a class="header-anchor" href="#_2027-07-27" aria-label="Permalink to &quot;2027.07.27&quot;">​</a></h2><p>格式化了 epubjs 的源代码，发现 epubjs 里有许多方法其实没有实现。</p>',30)]))}const x=t(l,[["render",d]]);export{f as __pageData,x as default};
