import{_ as o,c as a,ae as e,o as r}from"./chunks/framework.BzDBnRMZ.js";const i="/assets/pdd-jd-search.Bydy-Tgs.png",p="/assets/miniprogram.Ca1jkgRO.png",l="/assets/hefu-yujian.QXPgbVsX.png",n="/assets/embedded-miniprogram.CsDu0EM6.png",d="/assets/sub-miniprogram-pdd.EB-SDQ4E.png",s="/assets/sub-mimiprogram-jd.JQuHyupX.png",x=JSON.parse('{"title":"介绍小程序套小程序的三种方案，最后一种也许只有大厂才用","description":"","frontmatter":{},"headers":[],"relativePath":"blog/2024/12/14/index.md","filePath":"blog/2024/12/14/index.md"}'),u={name:"blog/2024/12/14/index.md"};function q(m,t,h,g,c,b){return r(),a("div",null,t[0]||(t[0]=[e('<h1 id="介绍小程序套小程序的三种方案-最后一种也许只有大厂才用" tabindex="-1">介绍小程序套小程序的三种方案，最后一种也许只有大厂才用 <a class="header-anchor" href="#介绍小程序套小程序的三种方案-最后一种也许只有大厂才用" aria-label="Permalink to &quot;介绍小程序套小程序的三种方案，最后一种也许只有大厂才用&quot;">​</a></h1><p>你在微信搜索小程序时，或许注意到一些企业有多个小程序，比如拼多多有&quot;拼多多&quot;、&quot;多多买菜&quot;……，京东有&quot;京东超市&quot;、&quot;京东到家买菜生鲜水果&quot;……</p><p><img src="'+i+'" alt=""></p><p>看到这些小程序，你可能会有一个想法——用一个核心的小程序，内部嵌套其他小程序。企业正是这么做的，他们一般有三种方案，分别是&quot;弹窗&quot;、&quot;半屏&quot;和&quot;分包&quot;。</p><p>其中&quot;分包&quot;最复杂，也许只有大厂才会用这个方案。本文我会为你逐一介绍这三种方案。</p><p>拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。</p><h2 id="弹窗" tabindex="-1">弹窗 <a class="header-anchor" href="#弹窗" aria-label="Permalink to &quot;弹窗&quot;">​</a></h2><p>第一种方案是&quot;弹窗打开另一个小程序&quot;。使用这个方案，打开其他小程序时，会出现一个提示弹窗。</p><p>星巴克打开&quot;用心说 星巴克&quot;、必胜客打开&quot;必胜客宅急送&quot;时，就用的这个方案。</p><p><img src="'+p+'" alt=""></p><p>这个方案官方 API 为 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/navigate/wx.navigateToMiniProgram.html" target="_blank" rel="noreferrer">wx.navigateToMiniProgram</a> 。不难看出，该方案的缺点就是，显眼的弹窗容易导致用户流失。许多用户一看到这个弹窗，瞬间就丢失了查看下一个小程序的兴趣。</p><p>不过它的优点也非常明显。</p><ol><li>此种方案，官方没有限制打开小程序的数量。也就是说，一个小程序可以打开很多新的小程序；</li><li>此种方案，打开的小程序功能不受限制。也就是说，新小程序可以再次用弹窗打开另一个小程序；</li><li>此种方案，天生环境隔离。也就是说适配工作量很少。</li></ol><p>综合优缺点，它最适合的场景，就是餐馆等需要用户坐在店铺里面的场景。因此很多餐馆点餐的小程序，都会用这种方案打开自己自带的商城小程序。</p><p>比如和府捞面会用弹窗打开&quot;和府捞面商城&quot;小程序，遇见小面会用弹窗打开&quot;遇见小面好物铺&quot;小程序。</p><p><img src="'+l+'" alt=""></p><h2 id="半屏" tabindex="-1">半屏 <a class="header-anchor" href="#半屏" aria-label="Permalink to &quot;半屏&quot;">​</a></h2><p>第二种方案是&quot;半屏打开另一个小程序&quot;。它不会出现提示用户的弹窗，而是从小程序底部出现一个浮层，浮层占据大半个窗口，里面是另一个小程序。</p><p>滴滴打开滴水筹、携程打开换汇时，使用的就是这个方案。</p><p><img src="'+n+'" alt=""></p><p>这个方案的官方 API 为 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/openEmbeddedMiniProgram.html" target="_blank" rel="noreferrer">wx.openEmbeddedMiniProgram</a>，不难看出，相比直接出现显眼的弹窗，这个方案的用户体验会更好。此外，它也是天生环境隔离，适配工作量很少。</p><p>不过它也有几个明显的缺陷：</p><ol><li>此种方案，不能打开个人主体的小程序；</li><li>此种方案，有数量限制，按官方文档来看，一个小程序最多只能打开 10 个半屏小程序；</li><li>此种方案，有功能限制。 <ul><li>打开的半屏小程序，不能再打开新的半屏小程序；</li><li>打开的半屏小程序，不能够二次分享。</li></ul></li></ol><p>我在日常接触的小程序中并不多，尚未总结出使用半屏小程序场景的共同规律。</p><h2 id="分包" tabindex="-1">分包 <a class="header-anchor" href="#分包" aria-label="Permalink to &quot;分包&quot;">​</a></h2><p>第三种方案是&quot;分包打开另一个小程序&quot;，它并不是官方提供的方案，而是开发者们研究出来的方案。</p><p>它的做法是，先把被嵌套的小程序打包成一个分包，然后以分包的方式，接入到核心小程序中。</p><p>拼多多的&quot;多多买菜&quot;和京东的&quot;京东到家买菜生鲜水果&quot;使用的就是这个方案。</p><p>我们先看拼多多，你可以点击搜索到的第一个&quot;拼多多&quot;小程序，在它的首页可以找到&quot;多多买菜&quot;的卡片，点击卡片，就可以看到&quot;多多买菜&quot;的页面。如果你点击的是第二个&quot;多多买菜&quot;小程序，你看到首页和刚才在&quot;拼多多&quot;小程序里看到的页面基本一模一样。</p><p><img src="'+d+'" alt=""></p><p>再看京东，你点击搜索到的第一个&quot;京东超市&quot;小程序，在它的首页可以找到&quot;京东超市&quot;选项，点击选项，就可以看到&quot;京东超市&quot;的页面。如果你点击的是第二个&quot;京东到家买菜生鲜水果&quot;小程序，你看到的首页和刚才在&quot;京东超市&quot;小程序里看到的页面基本一模一样。</p><p><img src="'+s+'" alt=""></p><p>这种方案的优点很明显，其一是用户无感知，流失量少；其二是没有功能的限制。</p><p>它的缺点也很明显，那就是需要强大的技术实力。需要开发者手动把一个小程序改造成分包的形式，还要想办法隔离两个小程序的环境。</p><p>我粗略估计，把一个小程序改造为分包，至少需要做三大改造。为了方便行文，我下面把需要改造为子包的小程序称为 B，把嵌套 B 的小程序称为 A。</p><ol><li>第一个改造是执行顺序改造。在改造之前，B 的执行顺序是先下载执行主包，再下载执行分包。但改造之后，B 的所有代码都是 A 的分包。假设 B 的主包被打包为分包 1，其他代码被打包为分包 2，那么在 A 执行分包 2 代码前，你需要保证分包 1 已经被执行；</li><li>第二个改造是文件引用改造。改造之前，B 的 app.js 的公共逻辑、app.wxss 的公共样式，还有 app.json 中公共组件，都是代码里共用的。B 被打包为 A 的多个分包后，你需要保证在 A 中，每个分包都能用它原本的公共逻辑、公共样式和公共组件；</li><li>第三个改造是状态改造。改造之前，你会在 B 里面用小程序的 globalData、Storage 共享数据，但是打包为 A 的子包后，你需要想办法把 B 的 globalData 和 Storage 做一个命名空间隔离。</li></ol><p>至于其他的共享登录、共享定位，共享下单等优化，听起来更是复杂。或许只有大厂能设计并使用这种方案吧。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文我介绍了三种小程序套小程序的方案：</p><table tabindex="0"><thead><tr><th>方案</th><th>API</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>弹窗</td><td>wx.navigateToMiniProgram</td><td>无数量限制、新小程序的功能不受限、天生隔离</td><td>用户体验差</td></tr><tr><td>半屏</td><td>wx.openEmbeddedMiniProgram</td><td>用户体验较好、天生隔离</td><td>个人主体无法使用、有数量限制、新小程序的功能受限制</td></tr><tr><td>分包</td><td>无</td><td>用户体验好，新小程序的功能不受限</td><td>技术难度大</td></tr></tbody></table><p>拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://developers.weixin.qq.com/miniprogram/dev/api/navigate/wx.navigateToMiniProgram.html" target="_blank" rel="noreferrer">wx.navigateToMiniProgram - 打开另一个小程序 | 微信官方文档</a></li><li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/openEmbeddedMiniProgram.html" target="_blank" rel="noreferrer">wx.openEmbeddedMiniProgram - 打开半屏小程序 | 微信官方文档</a></li></ul>',43)]))}const f=o(u,[["render",q]]);export{x as __pageData,f as default};
