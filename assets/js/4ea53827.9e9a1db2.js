"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[422],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>w});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=i,w=u["".concat(s,".").concat(m)]||u[m]||h[m]||o;return n?r.createElement(w,a(a({ref:t},p),{},{components:n})):r.createElement(w,a({ref:t},p))}));function w(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8075:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={},a="Swiper \u81ea\u9002\u5e94\u9ad8\u5ea6",c={permalink:"/blog/2023/08/13/swiper-adaptive-height",source:"@site/blog/2023-08-13-swiper-adaptive-height.md",title:"Swiper \u81ea\u9002\u5e94\u9ad8\u5ea6",description:"",date:"2023-08-13T00:00:00.000Z",formattedDate:"August 13, 2023",tags:[],readingTime:.835,hasTruncateMarker:!1,authors:[],frontMatter:{},nextItem:{title:"Tab \u6eda\u52a8\u5c45\u4e2d",permalink:"/blog/2023/07/30/tab-scroll-to-center"}},s={authorsImageUrls:[]},l=[],p={toc:l},u="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\u5c0f\u7a0b\u5e8f-swiper-\u81ea\u9002\u5e94\u9ad8\u5ea6"},"\u5c0f\u7a0b\u5e8f swiper \u81ea\u9002\u5e94\u9ad8\u5ea6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<swiper\n  style="height: {{swiperHeight}}px;"\n  bindchange="changeSwiper"\n>\n  <block\n    wx:for="{{wholeList}}"\n    wx:key="tab"\n    wx:for-item="wholeListItem"\n  >\n    <swiper-item>\n      <view id="swiper-item-content-{{index}}">\n        <block\n          wx:for="{{wholeListItem.list}}"\n          wx:key="item"\n        >\n          <view\n            style="background: #eee; height: 49px; border-bottom: 1px solid #777;"\n          >\n            {{item}}\n          </view>\n        </block>\n      </view>\n    </swiper-item>\n  </block>\n</swiper>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"Page({\n  data: {\n    wholeList: [\n      { tab: 'A', list: [] },\n      { tab: 'B', list: [] },\n      { tab: 'C', list: [] },\n      { tab: 'D', list: [] }\n    ]\n  },\n  onLoad() {\n    this.changeList(0)\n  },\n  changeSwiper(e) {\n    this.changeList(e.detail.current)\n  },\n  changeList(current) {\n    const list2D = [\n      ['A0', 'A1', 'A2', 'A3', 'A4'],\n      ['B0', 'B1', 'B2', 'B3', 'B4', 'B5'],\n      ['C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6'],\n      ['D0', 'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7']\n    ]\n    const newWholeList = this.data.wholeList\n    newWholeList.forEach((_, index) => {\n      newWholeList[index].list = (index === current) ? list2D[index] : []\n    })\n    this.setData({\n      wholeList: newWholeList\n    }, () => {\n      this.updateSwiperHeight(current)\n    })\n  },\n  updateSwiperHeight(current) {\n    const content =\n      this.createSelectorQuery()\n      .select(`#swiper-item-content-${current}`)\n    content.boundingClientRect(rect => {\n      this.setData({\n        swiperHeight: rect && rect.height\n      })\n    }).exec()\n  }\n})\n")))}h.isMDXComponent=!0}}]);