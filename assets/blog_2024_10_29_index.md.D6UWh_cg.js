import{_ as i,c as a,ae as n,o as t}from"./chunks/framework.BzDBnRMZ.js";const l="/assets/vite-demo.ZEl_2sQ_.png",h="/assets/vite-h5-version.DoIhJVxD.png",p="/assets/cross-env.DvojwOF0.png",e="/assets/build.DlrIvzmJ.png",k="/assets/dist.N0bQqta3.png",m=JSON.parse('{"title":"对比静态替换和动态插入标签，Vite 打包 H5 注入版本号哪种方式更优雅？","description":"","frontmatter":{},"headers":[],"relativePath":"blog/2024/10/29/index.md","filePath":"blog/2024/10/29/index.md"}'),E={name:"blog/2024/10/29/index.md"};function r(d,s,g,o,c,y){return t(),a("div",null,s[0]||(s[0]=[n('<h1 id="对比静态替换和动态插入标签-vite-打包-h5-注入版本号哪种方式更优雅" tabindex="-1">对比静态替换和动态插入标签，Vite 打包 H5 注入版本号哪种方式更优雅？ <a class="header-anchor" href="#对比静态替换和动态插入标签-vite-打包-h5-注入版本号哪种方式更优雅" aria-label="Permalink to &quot;对比静态替换和动态插入标签，Vite 打包 H5 注入版本号哪种方式更优雅？&quot;">​</a></h1><p>日常维护 H5 时，你可能有一个诉求，在 H5 发布时带上版本号。这样发现报错时，版本号可以辅助你排查错误；上线优化措施时，版本号可以辅助你观测性能……</p><p>本文我会告诉你 Vite 在 H5 注入版本号的两种方式，并对比它们的优劣。</p><p>我是羊肚JUN，一位前端程序员，做有温度的轻知识，有深度的硬内容。</p><h2 id="静态替换和动态插入标签" tabindex="-1">静态替换和动态插入标签 <a class="header-anchor" href="#静态替换和动态插入标签" aria-label="Permalink to &quot;静态替换和动态插入标签&quot;">​</a></h2><ul><li>静态替换，利用 Vite 的 .env 文件和 <code>import.meta.env</code> 对象，打包时直接替换 js 代码、Vue 模板中的变量</li><li>动态插入标签，利用 Vite 插件和 <code>tansformIndexHtml</code> 钩子，打包时往 HTML 里插入标签</li></ul><p>为了方便理解，下面演示这两种方法。首先用 Vite 新建一个 Demo，出于习惯我这里直接选择了 React，你也可以选择 Vue。</p><p><img src="'+l+'" alt=""></p><h2 id="静态替换的流程" tabindex="-1">静态替换的流程 <a class="header-anchor" href="#静态替换的流程" aria-label="Permalink to &quot;静态替换的流程&quot;">​</a></h2><p>静态替换主要分为三个步骤：</p><ol><li>在 .env 文件写入变量</li><li>在 js 代码中替换变量</li><li>上报版本号给监控 SDK</li></ol><h3 id="在-env-文件写入变量" tabindex="-1">在 .env 文件写入变量 <a class="header-anchor" href="#在-env-文件写入变量" aria-label="Permalink to &quot;在 .env 文件写入变量&quot;">​</a></h3><p>需要注意的是，<strong>只有以 VITE_ 为前缀的变量才会暴露给经过 vite 处理的代码</strong>。你可以把版本号命名为 <code>Vite_H5_VERSION</code>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VITE_H5_VERSION=0.0.1</span></span></code></pre></div><h3 id="在-js-代码中替换变量" tabindex="-1">在 js 代码中替换变量 <a class="header-anchor" href="#在-js-代码中替换变量" aria-label="Permalink to &quot;在 js 代码中替换变量&quot;">​</a></h3><p>你可以在 vite 需要处理的代码中，直接使用 <code>import.meta.env.VITE_H5_VERSION</code>。比如在 main.jsx 中直接打印它。</p><p>这样编译后，<code>import.meta.env.VITE_H5_VERSION</code> 会被自动替换。如下图所示，第三个文件是编译后的 js，可以看到变量已经被替换为版本号。</p><p><img src="'+h+`" alt=""></p><h3 id="上报版本号给监控-sdk" tabindex="-1">上报版本号给监控 SDK <a class="header-anchor" href="#上报版本号给监控-sdk" aria-label="Permalink to &quot;上报版本号给监控 SDK&quot;">​</a></h3><p>现在，你要做的就是把版本号上传到监控平台。我们以阿里云的 ARMS npm 包为例子：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BrowserLogger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alife-logger&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __bl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BrowserLogger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">singleton</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pid: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ARMS 配置应用版本号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> release: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_H5_VERSION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // ... 省略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="动态插入标签的流程" tabindex="-1">动态插入标签的流程 <a class="header-anchor" href="#动态插入标签的流程" aria-label="Permalink to &quot;动态插入标签的流程&quot;">​</a></h2><p>动态插入标签也主要分为三个步骤：</p><ol><li>从命令行读取版本号</li><li>插入版本号到 HTML</li><li>上报版本号给监控 SDK</li></ol><h3 id="从命令行读取版本号" tabindex="-1">从命令行读取版本号 <a class="header-anchor" href="#从命令行读取版本号" aria-label="Permalink to &quot;从命令行读取版本号&quot;">​</a></h3><p>Windows、Linux 和 Mac 系统，在命令行设置临时环境变量的写法不同，你可以在安装 cross-env 这个开发依赖。它可以让你在不同系统使用相同方式注入环境变量（比如版本号）。</p><p><img src="`+p+`" alt=""></p><p>安装依赖后，你可以运行如下命令。它的作用是往 process-env 里注入变量 H5_VERSION，并执行打包。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cross-env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> H5_VERSION=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><p>你可以直接在 vite.config.js 中打印读取到的版本号：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> react </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-react&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;H5_VERSION is &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H5_VERSION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// https://vite.dev/config/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">react</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>可以看到，当运行 build 命令时，在 vite.config.js 内部已经读取到了 H5_VERSION。</p><p><img src="`+e+`" alt=""></p><p>下面，你需要把版本号插入到 HTML 中。</p><h3 id="插入版本号到-html" tabindex="-1">插入版本号到 HTML <a class="header-anchor" href="#插入版本号到-html" aria-label="Permalink to &quot;插入版本号到 HTML&quot;">​</a></h3><p>你可以使用一个 vite 官方插件钩子函数 <a href="https://vitejs.cn/vite3-cn/guide/api-plugin.html#transformindexhtml" target="_blank" rel="noreferrer">transformIndexHtml</a> 编写一个插件，它可以替换 HTML 的内容，也可以插入 js 脚本。</p><p>插件代码如下，transformIndexHtml 函数返回了一个对象，对象包括 html 和 tag 两个属性。不难看出，这个对象的意思就是，在 head 标签靠前的位置插入一个 script 标签，标签内容是 <code>window.$H5_VERSION=&quot;0.0.1&quot;</code>。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> react </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-react&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> injectVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;inject-version&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    transformIndexHtml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        html,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        tags: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            injectTo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;head-prepend&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            tag: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;script&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            children: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`window.$H5_VERSION = &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H5_VERSION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">react</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">injectVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>你可以再次启动打包，就能看到 dist 的产物中已经有了插入版本号的脚本。</p><p><img src="`+k+`" alt=""></p><h3 id="上报版本号给监控-sdk-1" tabindex="-1">上报版本号给监控 SDK <a class="header-anchor" href="#上报版本号给监控-sdk-1" aria-label="Permalink to &quot;上报版本号给监控 SDK&quot;">​</a></h3><p>因为版本号脚本在 head 标签最顶层，会最早执行，所以你之后在 HTML、React 中都可以用 <code>window.$H5_VERSION</code> 获取版本号。</p><p>现在，你要做的就是把版本号上传到监控平台。</p><p>以阿里云的错误监控 ARMS 为例，你可以在它初始化 SDK 时给 release 取值 <code>window.$H5_VERSION</code>。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- ... 省略 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        c[a] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (c[a] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        c[a].config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          pid: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // ARMS 配置应用版本号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          release: window.$H5_VERSION,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // ... 省略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ... 省略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })(window, document, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;__bl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- ...省略 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th></th><th>静态替换</th><th>动态插入标签</th></tr></thead><tbody><tr><td><strong>读入变量方式</strong></td><td>从 .env 文件读入</td><td>从命令行读取</td></tr><tr><td><strong>替换变量方式</strong></td><td>利用 vite 替换</td><td>利用插入标签替换</td></tr><tr><td><strong>使用变量的地方</strong></td><td>vite 处理后的 js 文件</td><td>html、js 均可</td></tr></tbody></table><p>总结来看，动态插入标签，可以在 HTML 里使用变量，对 cdn 引入的 js、npm 包引入的 js 使用都很友好，我认为这是一种更优雅的方式。</p><p>我是羊肚JUN，一位前端程序员，做有温度的轻知识，有深度的硬内容。</p>`,49)]))}const u=i(E,[["render",r]]);export{m as __pageData,u as default};
