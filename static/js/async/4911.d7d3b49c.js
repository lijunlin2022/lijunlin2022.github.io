"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["4911"],{7028:function(e,n,t){t.r(n),t.d(n,{default:function(){return a}});var i=t(85893),r=t(50065),s=t(95895);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",sup:"sup",ul:"ul",li:"li",h2:"h2",ol:"ol",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",section:"section"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"布局视口视觉视口和理想视口",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#布局视口视觉视口和理想视口",children:"#"}),"布局视口、视觉视口和理想视口"]}),"\n",(0,i.jsx)(s.Z,{defaultLocale:"zh-CN"}),"\n",(0,i.jsx)(n.p,{children:"vscode 默认生成的 HTML 中，会看到下面这段代码。这段代码和移动端的适配有关。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",meta:"",children:'<meta name="viewport" content="width=device-width, initial-scale=1.0" />\n'})}),"\n",(0,i.jsxs)(n.p,{children:["首先，我们需要知道一个概念，视口（viewport），也就是我们在浏览器中看到的区域。",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]}),"\n",(0,i.jsxs)(n.p,{children:["在移动端，布局的视口和可见的视口并不一样，我们可以将视口分为三种情况：",(0,i.jsx)(n.sup,{children:(0,i.jsx)(n.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"布局视口（layout viewport）"}),"\n",(0,i.jsx)(n.li,{children:"视觉视口（visual viewport）"}),"\n",(0,i.jsx)(n.li,{children:"理想视口（ideal viewport）"}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"布局视口",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#布局视口",children:"#"}),"布局视口"]}),"\n",(0,i.jsx)(n.p,{children:"默认情况下，一个 PC 端的网页，在移动端会如何显示呢？"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"它会按照宽度为 980px 来布局一个页面的内容。"}),"\n",(0,i.jsx)(n.li,{children:"为了可以完整地显示在页面中，对整个页面进行缩小。"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"这个 980px 的视口，就是布局视口（layout viewport）。"}),"\n",(0,i.jsxs)(n.h2,{id:"视觉视口",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#视觉视口",children:"#"}),"视觉视口"]}),"\n",(0,i.jsx)(n.p,{children:"如果默认情况下，我们按照 980px 显示内容，那么右侧有一部分区域就会无法显示。所以手机端浏览器会默认对页面进行缩放，以显示到用户的可见区域中。"}),"\n",(0,i.jsx)(n.p,{children:"显示在这个可见区域中的，就是视觉视口（visual viewport）。"}),"\n",(0,i.jsxs)(n.h2,{id:"理想视口",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#理想视口",children:"#"}),"理想视口"]}),"\n",(0,i.jsx)(n.p,{children:"默认情况下的 layout view 并不适合我们进行布局，我们可以对 layout viewport 进行宽度和缩放的设置，以满足一个移动端窗口的布局。"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"值"}),(0,i.jsx)(n.th,{children:"可能的附加值"}),(0,i.jsx)(n.th,{children:"描述"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"width"}),(0,i.jsx)(n.td,{children:"一个正整数，或者字符串 device-width"}),(0,i.jsx)(n.td,{children:"定义 viewport 的宽度"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"height"}),(0,i.jsx)(n.td,{children:"一个正整数，或者字符串 device-height"}),(0,i.jsx)(n.td,{children:"定义 viewport 的高度, 一般不会设置"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"initial-scale"}),(0,i.jsx)(n.td,{children:"一个 0.0 和 10.0 之间的正数"}),(0,i.jsx)(n.td,{children:"定义设备宽度和 viewport 的缩放比例"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"maximum-scale"}),(0,i.jsx)(n.td,{children:"一个 0.0 和 10.0 之间的正数"}),(0,i.jsx)(n.td,{children:"定义缩放的最大值"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"minimum-scale"}),(0,i.jsx)(n.td,{children:"一个 0.0 和 10.0 之间的正数"}),(0,i.jsx)(n.td,{children:"定义缩放的最小值"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"user-scalable"}),(0,i.jsx)(n.td,{children:"yes, 1 或者 no, 0"}),(0,i.jsx)(n.td,{children:"默认为 yes，如果设置为 no，将无法缩放当前页面，部分浏览器可能忽略此规则"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"下面给出一段比较可靠的设置理想视口的代码："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",meta:"",children:'<meta\r\n  name="viewport"\r\n  content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=0"\r\n/>\n'})}),"\n",(0,i.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,i.jsxs)(n.h2,{className:"sr-only",id:"footnote-label",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#footnote-label",children:"#"}),"Footnotes"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.bilibili.com/video/BV1u841157Fh/?share_source=copy_web",target:"_blank",rel:"noopener noreferrer",children:"HTML+CSS 《移动端适配方案》"})," ",(0,i.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"↩"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{id:"user-content-fn-2",children:["\n",(0,i.jsxs)(n.p,{children:["layout viewport, visual viewport 和 ideal viewport 的概念来源于 ppk，他是一个在移动端浏览器贡献较大的程序员 ",(0,i.jsx)(n.a,{href:"#user-content-fnref-2","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"↩"})]}),"\n"]}),"\n"]}),"\n"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(d,e)})):d(e)}let a=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["docs%2Fhtml%2F01-layout-visual-and-ideal-viewport.mdx"]={toc:[{id:"布局视口",text:"布局视口",depth:2},{id:"视觉视口",text:"视觉视口",depth:2},{id:"理想视口",text:"理想视口",depth:2}],title:"布局视口、视觉视口和理想视口",frontmatter:{}}},95895:function(e,n,t){t.d(n,{Z:function(){return a}});var i=t(85893),r=t(67294),s=t(45687);t(6175);let d={"zh-CN":e=>`预计阅读时间: ${e.minutes>=1?`${Math.ceil(e.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function l(e,n,t){let i=Object.keys(d).includes(n)?n:t;return d[i](e)}let a=e=>{let{defaultLocale:n="en-US"}=e,t=(0,s.Vi)().page.readingTimeData,d=(0,s.Jr)(),a=(0,s.e7)(),[c,h]=(0,r.useState)(l(t,d,n));return(0,r.useEffect)(()=>{h(l(t,d,n))},[d,t]),(0,i.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:c})}}}]);