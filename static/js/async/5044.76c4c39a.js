"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["5044"],{2620:function(e,n,d){d.r(n),d.d(n,{default:function(){return s}});var r=d(5893),c=d(65);function i(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",ul:"ul",li:"li"},(0,c.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"正则表达式的基本符号",children:["正则表达式的基本符号",(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#正则表达式的基本符号",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在爬虫的开发中，需要把有用的信息从一大段文本中提取出来。正则表达式是提取信息的方法之一。正则表达式虽然不是最简单的也不是最高效的数据提取方法，但它是最直接的。而且在某些情况下，只有使用正则表达式才能达到目的。学好正则表达式，是开发爬虫的第一步。"}),"\n",(0,r.jsx)(n.p,{children:"正则表达式（Regular Expression）是一段字符串，它可以表示一段有规律的信息。"}),"\n",(0,r.jsxs)(n.h2,{id:"点号-",children:['点号 "."',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#点号-",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"一个点号可以代替除了换行符以外的任何一个字符，包括但不限于英文字母、数字、汉字、英文标点符号和中文标点符号。例如，有如下几个不同的字符串："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'kingname\r\nkinabcme\r\nkin123me\r\nkin我是谁me\r\nkin嗨你好me\r\nkin"m"me\n'})}),"\n",(0,r.jsx)(n.p,{children:"这些字符串的前3个字符都是 kin，后两个字符都是 me，只有中间的3个字符不同。如果使用点号来表示，那么全部都可以变成 kin...me 的形式，中间有多少个字就用多少个点。"}),"\n",(0,r.jsxs)(n.h2,{id:"星号-",children:['星号 "*"',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#星号-",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"一个星号可以表示它前面的一个子表达式（普通字符、另一个或几个正则表达式符号）0 次到无限次。"}),"\n",(0,r.jsx)(n.p,{children:"例如，有如下几个不同的字符串："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如果快乐你就笑哈\r\n如果快乐你就笑哈哈\r\n如果快乐你就笑哈哈哈哈\r\n如果快乐你就笑哈哈哈哈哈哈哈哈哈\n"})}),"\n",(0,r.jsx)(n.p,{children:'这些字符串里面，"哈"字重复出现，所以如果用星号来表示，那么就可以全部变成：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如果快乐你就笑哈*\n"})}),"\n",(0,r.jsx)(n.p,{children:'由于星号可以表示它前面的字符 0 次，没有"哈"字，这个正则表达式也是匹配给出的几个不同的字符串的。'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如果快乐你就笑*\n"})}),"\n",(0,r.jsx)(n.p,{children:"既然星号可以表示它前面的字符，那么如果它前面的字符是一个点号呢？例如下面这个正则表达式："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如.*哈\n"})}),"\n",(0,r.jsx)(n.p,{children:'它表示在"如"和"哈"中间出现"任意多个除了换行符以外的任意字符"。这句话看起来有点绕，用下面几个字符串来说明，它们全部都可以用上面的这个正则表达式来表示：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如哈\r\n如果快乐哈\r\n如果快乐你就笑哈\r\n如果你知道1+1=2那么请计算地球的半径哈\r\n如aklsdjfjaf哈\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"问号-",children:['问号 "?"',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问号-",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"问号表示它前面的子表达式 0 次或者 1 次。注意，这里的问号是英文问号。例如下面这两个不同的字符串："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"笑起来。\r\n笑起来哈。\n"})}),"\n",(0,r.jsx)(n.p,{children:'在汉字"来"和中文句号之间有 0 个或者 1 个"哈"字，都可以使用下面这个正则表达式来表示：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如.*?哈\n"})}),"\n",(0,r.jsx)(n.p,{children:'问号最大的用处是与点号和星号配合起来使用，构成".*?"。通过正则表达式来提取信息的时候，用到最多的也是这个组合。下面的所有字符串：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如哈\r\n如果快乐哈\r\n如果快乐你就笑哈\r\n如果你知道1+1=2那么请计算地球的半径哈\r\n如aklsdjfjaf哈\n"})}),"\n",(0,r.jsx)(n.p,{children:"都可以用下面这个正则表达式来表示："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"如.*?哈\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"反斜杠-",children:['反斜杠 ""',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#反斜杠-",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"在正则表达式里面，很多符号都是有特殊意义的，例如问号、星号、大括号、中括号和小括号。那么如果要匹配的内容里面本身就有这些符号怎么办呢？如何告诉正则表达式现在只想把星号当作普通的星号来使用呢？"}),"\n",(0,r.jsx)(n.p,{children:'这个时候反斜杠就要登场了。反斜杠放在星号的前面，写成 "*" 可以把星号变成普通的字符，不再具有正则表达式的意义。'}),"\n",(0,r.jsxs)(n.h2,{id:"数字-d",children:['数字 "\\d"',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#数字-d",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:'正则表达式里面使用 "\\d" 来表示一位数字。为什么要用字母 d 呢？因为 d 是英文 "digital（数字）" 的首字母。再次强调一下，"\\d" 虽然是由反斜杠和字母 d 构成的，但是要把 "\\d" 看成一个正则表达式符号整体。如果要提取 2 个数字，可以使用 \\d\\d；如果要提取 3 个数字，可以使用 \\d\\d\\d。但是如果不知道这个数有多少位怎么办呢？就需要用 * 号来表示一个任意位数的数字。'}),"\n",(0,r.jsxs)(n.h2,{id:"小括号-",children:['小括号 "()"',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#小括号-",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:'小括号可以把括号里面的内容提取出来。前面讲到的符号仅仅能让正则表达式"表示"一串字符串。但是如果要从一段字符串中"提取"出一部分的内容应该怎么办呢？这个时候就需要使用小括号了。有如下一个字符串：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"我的密码是：12345abcde你帮我记住。\n"})}),"\n",(0,r.jsxs)(n.p,{children:['可以看出，这里的密码左边有一个英文冒号，右边有一个汉字"你"。当构造一个正则表达式：',(0,r.jsx)(n.code,{children:".*?你"})," 时，得到的结果将会是："]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:":12345abcde你\n"})}),"\n",(0,r.jsx)(n.p,{children:'然而，冒号和汉字"你"并不是密码的一部分，如果只想要 "12345abcde"，就需要使用括号：'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:":(.*?)你\n"})}),"\n",(0,r.jsx)(n.p,{children:"得到的结果就是："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"12345abcde\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"-和--的区别",children:['".*?" 和 ".?" 的区别',(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#-和--的区别",children:"#"})]}),"\n",(0,r.jsx)(n.p,{children:"下面通过一个实际的例子来进行说明。请看下面这一段话："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"我的微博密码是: 1234567, QQ 密码是: 33445566, 银行卡密码是: 888888, GitHub 密码是: 999abc999, 帮我记住它们\n"})}),"\n",(0,r.jsx)(n.p,{children:'这段话有一个显著的规律，是在"密码是"这 3 个汉字的后面跟一个中文的冒号，冒号后面是密码，密码后面是中文的逗号。'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"密码是(.*),"}),"，能够提取到的信息是 ",(0,r.jsx)(n.code,{children:"1234567, QQ 密码是: 33445566, 银行卡密码是: 888888, GitHub 密码是: 999abc999"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"密码是(.*?),"}),"，能够提取到的信息是 ",(0,r.jsx)(n.code,{children:"1234567"}),"，",(0,r.jsx)(n.code,{children:"33445566"}),"，",(0,r.jsx)(n.code,{children:"888888"}),"，",(0,r.jsx)(n.code,{children:"999abc999"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["举一个例子，10 个人肩并肩并排站着，使用 ",(0,r.jsx)(n.code,{children:"(.*)"})," 取到了第 1 个人左手到第 10 个人右手之间的所有东西，而使用 ",(0,r.jsx)(n.code,{children:"(.*?)"})," 取到的是每个人的左手和右手之间的东西。"]}),"\n",(0,r.jsx)(n.p,{children:"一句话总结如下:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".*"}),"：贪婪模式，获取最长的满足条件的字符串。"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".*?"}),"：非贪婪模式，获取最短的能满足条件的字符串。"]}),"\n"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}let s=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["docs%2Fpython%2F04-basic-symbols-of-regular-expressions.md"]={toc:[{text:'点号 "."',id:"点号-",depth:2},{text:'星号 "*"',id:"星号-",depth:2},{text:'问号 "?"',id:"问号-",depth:2},{text:'反斜杠 ""',id:"反斜杠-",depth:2},{text:'数字 "\\d"',id:"数字-d",depth:2},{text:'小括号 "()"',id:"小括号-",depth:2},{text:'".*?" 和 ".?" 的区别',id:"-和--的区别",depth:2}],title:"正则表达式的基本符号",frontmatter:{}}}}]);