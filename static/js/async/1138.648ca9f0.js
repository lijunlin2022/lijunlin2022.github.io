"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["1138"],{82751:function(e,n,r){r.r(n),r.d(n,{default:()=>f});var s=r("85893"),c=r("50065");let i=r.p+"static/image/loop-progress.4b98564e.gif",d=r.p+"static/image/rem-mod.f23cfc12.png",l=r.p+"static/image/5rem2.77af55d3.png",a=r.p+"static/image/-5rem2.3acda940.png",t=r.p+"static/image/5rem-2.562a9797.png",h=r.p+"static/image/-5rem-2.637324cc.png",o=r.p+"static/image/verify-func-1.03380b72.png",x=r.p+"static/image/verify-func-2.95c3b675.png";function j(e){let n=Object.assign({h1:"h1",a:"a",p:"p",blockquote:"blockquote",img:"img",ul:"ul",li:"li",pre:"pre",code:"code",h2:"h2",h3:"h3",strong:"strong",sup:"sup",section:"section",ol:"ol"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"取余和取模如何区分与应用",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#取余和取模如何区分与应用",children:"#"}),"取余和取模如何区分与应用？"]}),"\n",(0,s.jsx)(n.p,{children:"取余（remainer）和取模（modulo），很多书籍没有说明它们的区别、也没有说明它们的应用场景。比如《JavaScript 高级程序设计（第 4 版）》直接说："}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"取模（余数）操作符由一个百分比符号（%）表示。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"但实际上，两个概念并不完全一致。严格来说，JavaScript 中的 % 是取余，而不是取模。"}),"\n",(0,s.jsx)(n.p,{children:"有读者可能认为，没必要区分取余和取模。但我想说，区分取余和取模，能帮助你写出更优雅的代码。"}),"\n",(0,s.jsx)(n.p,{children:"以掘金的创作话题轮播为例，它带有灰色进度条，当你左滑或右滑时，话题对应的圆点会变长。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:i})}),"\n",(0,s.jsx)(n.p,{children:"假如让你来实现灰色进度条，需要计算左滑后的下标（prevIndex）和右滑后的下标（nextIndex），你会怎么做呢？"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"要是你完全不理解取余和取模，为了兼顾左滑、右滑的边界情况，你可能会这样写："}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:"",children:"const prevIndex = currentIndex - 1 < 0 ?\r\n                  len - 1 :\r\n                  currentIndex - 1\r\n\r\nconst nextIndex = currentIndex + 1 > len - 1 ?\r\n                  0 :\r\n                  currentIndex + 1\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"要是你只理解取余，不理解取模，你可能会这样写："}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:"",children:"const prevIndex = (currentIndex - 1) % len < 0 ?\r\n                  (currentIndex - 1) + len :\r\n                  currentIndex - 1\r\n\r\nconst nextIndex = (currentIndex + 1) % len\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"要是你既理解取余，又理解取模，你可以写出更优雅的代码：（mod 不是 JavaScript 原生函数，需要额外实现）"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:"",children:"const prevIndex = mod(currentIndex - 1, len)\r\nconst nextIndex = mod(currentIndex + 1, len)\n"})}),"\n",(0,s.jsx)(n.p,{children:"如果你想知道取余和取模的区别和应用、以及 mod 函数如何实现，看完这篇文章，你一定有所收获。"}),"\n",(0,s.jsx)(n.p,{children:"我会先给出取余和取模的计算方式，再用四个例子解释计算方式，接着我会谈一谈什么时候该取余，什么时候该取模，最后我会介绍 JavaScript 中 2 种实现 mod 函数的方法。"}),"\n",(0,s.jsxs)(n.h2,{id:"计算方式",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#计算方式",children:"#"}),"计算方式"]}),"\n",(0,s.jsx)(n.p,{children:"余数和模的计算方式如下图："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:d})}),"\n",(0,s.jsx)(n.p,{children:"其中 fix 代表向 0 取整，而 floor 代表向负无穷取整。你可能并不理解什么叫作「向 0 取整」，什么叫作「向负无穷取整」，先不要着急，在例子中我会详细讲解。"}),"\n",(0,s.jsxs)(n.h2,{id:"例子",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#例子",children:"#"}),"例子"]}),"\n",(0,s.jsxs)(n.h3,{id:"5-除以-2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-除以-2",children:"#"}),"5 除以 2"]}),"\n",(0,s.jsxs)(n.p,{children:["把 x = 5，y = 2 代入公式后，你需要计算的是 ",(0,s.jsx)(n.code,{children:"fix(2.5)"})," 和 ",(0,s.jsx)(n.code,{children:"floor(2.5)"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:l})}),"\n",(0,s.jsx)(n.p,{children:"你可以画出一个右箭头，代表从负无穷指向正无穷的数轴。"}),"\n",(0,s.jsx)(n.p,{children:"找到 2.5 的位置，可以发现 0 和负无穷都在 2.5 的左边。对 2.5 来说，向 0 取整和向负无穷取整，都是往左边取。"}),"\n",(0,s.jsxs)(n.p,{children:["所以 ",(0,s.jsx)(n.code,{children:"fix(2.5) = 2"}),"， ",(0,s.jsx)(n.code,{children:"floor(2.5) = 2"}),"，把它们代入公式，得到余数和模都是 1。"]}),"\n",(0,s.jsxs)(n.h3,{id:"-5-除以-2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#-5-除以-2",children:"#"}),"-5 除以 2"]}),"\n",(0,s.jsxs)(n.p,{children:["再看 -5 除以 2，继续代入公式画数轴，你需要计算的是 ",(0,s.jsx)(n.code,{children:"fix(-2.5)"})," 和 ",(0,s.jsx)(n.code,{children:"floor(-2.5)"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:a})}),"\n",(0,s.jsx)(n.p,{children:"找到 -2.5 的位置，可以看到 0 在 -2.5 的右边，而负无穷在 -2.5 的左边。此时向 0 取整就是取 -2.5 右边的整数，向负无穷取整就是取 -2.5 左边的整数。"}),"\n",(0,s.jsxs)(n.p,{children:["所以 ",(0,s.jsx)(n.code,{children:"fix(-2.5) = -2"}),"，",(0,s.jsx)(n.code,{children:"floor(-2.5) = -3"}),"。把它们代入公式，得到余数为 -1，模为 1。"]}),"\n",(0,s.jsxs)(n.h3,{id:"5-除以--2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-除以--2",children:"#"}),"5 除以 -2"]}),"\n",(0,s.jsxs)(n.p,{children:["继续看 5 除以 -2，你需要计算的是 ",(0,s.jsx)(n.code,{children:"fix(-2.5)"})," 和 ",(0,s.jsx)(n.code,{children:"floor(-2.5)"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t})}),"\n",(0,s.jsxs)(n.p,{children:["之前已经知道 ",(0,s.jsx)(n.code,{children:"fix(-2.5) = -2"}),"，",(0,s.jsx)(n.code,{children:"floor(-2.5) = -3"}),"，把它们代入公式，得到余数为 1，模为 -1。"]}),"\n",(0,s.jsxs)(n.h3,{id:"-5-除以--2",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#-5-除以--2",children:"#"}),"-5 除以 -2"]}),"\n",(0,s.jsxs)(n.p,{children:["最后看 -5 除以 -2，你需要计算的是 ",(0,s.jsx)(n.code,{children:"fix(2.5)"})," 和 ",(0,s.jsx)(n.code,{children:"floor(2.5)"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:h})}),"\n",(0,s.jsxs)(n.p,{children:["之前已经知道 ",(0,s.jsx)(n.code,{children:"fix(2.5) = 2"}),"，",(0,s.jsx)(n.code,{children:"floor(2.5) = 2"}),"，把它们代入公示后得到余数和模都是 -1。"]}),"\n",(0,s.jsxs)(n.h2,{id:"余数和模的区别",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#余数和模的区别",children:"#"}),"余数和模的区别"]}),"\n",(0,s.jsx)(n.p,{children:"观察上面的 4 个例子，不难发现，取余和取模的结果，和 x 和 y 的正负号有关。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"当 x 和 y 同为正数、或者同为负数时，x rem y 和 x mod y 的结果一样。"}),"\n",(0,s.jsx)(n.li,{children:"当 x 和 y 符号不一致时，x rem y 和 x mod y 的结果不一样。rem 计算结果符号和 x 一样，mod 计算结果和 y 一样。"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"实际应用中，y 一般都是正数，因此只需要考虑 x 符号的正负。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"当 x 为正数时，此时取余数和取模结果一致，因此最好使用 JavaScript 的 % 运算符。"}),"\n",(0,s.jsx)(n.p,{children:"例如你想访问数组中的某个元素，又担心下标超出数组的范围，你可以先求下标除以数组长度的余数，把余数作为新下标。"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"当 x 可能为正数也可能为负数时，此时可以实现一个 mod 函数。"}),"\n",(0,s.jsx)(n.p,{children:"例如我在文章开头举的例子，prevIndex 可能是一个负数，你可以直接求 prevIndex 除以轮播长度的模。"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"实现取模函数",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#实现取模函数",children:"#"}),"实现取模函数"]}),"\n",(0,s.jsx)(n.p,{children:"取模函数，我知道的有两种实现方法，一种是偏重工程，另一种偏重学术。两者有什么区别呢？"}),"\n",(0,s.jsx)(n.p,{children:"之前提到过，实际应用中，x mod y 时，y 一般是正数。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"工程方法追求简单实用，只考虑 y 为正数的情况。"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"它的写法简单易懂，先求 x 除以 y 的余数，如果结果为负数，就给结果再加上一个 y，保证结果始终为正数。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:"",children:"function mod(x, y) {\r\n  const res = x % y\r\n  return res < 0 ? res + y : res\r\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:o})}),"\n",(0,s.jsxs)(n.p,{children:["Ant Design Mobile Swiper ",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," 源码用的就是这种方法。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"学术方法追求逻辑严密，既会考虑 y 为正数，也会考虑 y 为负数。"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"它的写法如下，我不清楚怎么证明，但代入数字计算，可以验证结果正确。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",meta:"",children:"function mod(x, y) {\r\n  return ((x % y) + y) % y;\r\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:x})}),"\n",(0,s.jsxs)(n.p,{children:["MDN ",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})," 和 stackoverflow ",(0,s.jsx)(n.sup,{children:(0,s.jsx)(n.a,{href:"#user-content-fn-3",id:"user-content-fnref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})})," 推荐的就是这种方法。"]}),"\n",(0,s.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,s.jsxs)(n.h2,{className:"sr-only",id:"footnote-label",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#footnote-label",children:"#"}),"Footnotes"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/ant-design/ant-design-mobile/blob/master/src/components/swiper/swiper.tsx",target:"_blank",rel:"noopener noreferrer",children:"ant-design-mobile | github"})," ",(0,s.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"↩"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{id:"user-content-fn-2",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Remainder",target:"_blank",rel:"noopener noreferrer",children:"remainder | mdn"})," ",(0,s.jsx)(n.a,{href:"#user-content-fnref-2","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"↩"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{id:"user-content-fn-3",children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/4467539/javascript-modulo-gives-a-negative-result-for-negative-numbers/17323608#17323608",target:"_blank",rel:"noopener noreferrer",children:"JavaScript % (modulo) gives a negative result for negative numbers | stackoverflow"})," ",(0,s.jsx)(n.a,{href:"#user-content-fnref-3","data-footnote-backref":!0,className:"data-footnote-backref","aria-label":"Back to content",children:"↩"})]}),"\n"]}),"\n"]}),"\n"]})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(j,e)})):j(e)}let f=p;p.__RSPRESS_PAGE_META={},p.__RSPRESS_PAGE_META["zh%2Fblog%2F2024%2F01%2F18%2Findex.md"]={toc:[{id:"计算方式",text:"计算方式",depth:2},{id:"例子",text:"例子",depth:2},{id:"5-除以-2",text:"5 除以 2",depth:3},{id:"-5-除以-2",text:"-5 除以 2",depth:3},{id:"5-除以--2",text:"5 除以 -2",depth:3},{id:"-5-除以--2",text:"-5 除以 -2",depth:3},{id:"余数和模的区别",text:"余数和模的区别",depth:2},{id:"实现取模函数",text:"实现取模函数",depth:2}],title:"取余和取模如何区分与应用？",frontmatter:{}}}}]);