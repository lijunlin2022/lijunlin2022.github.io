"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["5141"],{37636:function(e,n,s){s.r(n),s.d(n,{default:()=>p});var r=s("85893"),a=s("50065"),i=s("95895");let t=s.p+"static/image/demo.0f8c7d70.png",c=s.p+"static/image/vite.628a0fc5.png",l=s.p+"static/image/cargo.2c26dc11.png",d=s.p+"static/image/build.3df8ad6b.png",h=s.p+"static/image/package.1fa73383.png";function m(e){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",ol:"ol",li:"li",h2:"h2",pre:"pre",code:"code"},(0,a.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"如何结合-vite-和-rust在-vuereact-中运行-webassembly-模块",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#如何结合-vite-和-rust在-vuereact-中运行-webassembly-模块",children:"#"}),"如何结合 Vite 和 Rust，在 Vue/React 中运行 WebAssembly 模块？"]}),"\n",(0,r.jsx)(i.Z,{defaultLocale:"zh-CN"}),"\n",(0,r.jsx)(n.p,{children:"Rust 近年很火热，我跟风尝试入门 Rust 几次，都放弃了。其中一个原因是，Rust 和实际业务关联不强，我很难迁移知识。"}),"\n",(0,r.jsx)(n.p,{children:"怎样结合 Rust 和前端业务开发？我发现了一个办法，那就是结合 Vite 和 Rust，在 Vue/React 中运行 WebAssembly 模块。现在我把它分享给你。"}),"\n",(0,r.jsx)(n.p,{children:"本文我会实现一个 Demo，效果如下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"点击按钮后，Vue/React 代码会调用 Rust 生成的 WebAssembly 代码;"}),"\n",(0,r.jsx)(n.li,{children:"WebAssembly 代码会生成一串字符串，再返回给 Vue/React 代码；"}),"\n",(0,r.jsx)(n.li,{children:"Vue/React 把字符串渲染到界面上。"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。"}),"\n",(0,r.jsxs)(n.h2,{id:"五个步骤",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#五个步骤",children:"#"}),"五个步骤"]}),"\n",(0,r.jsx)(n.p,{children:"要实现 Demo，你要经过 5 个步骤："}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"用 Vite 创建 Vue/React 项目；"}),"\n",(0,r.jsx)(n.li,{children:"用 cargo 创建一个 Rust 库；"}),"\n",(0,r.jsx)(n.li,{children:"打包 Rust 代码；"}),"\n",(0,r.jsx)(n.li,{children:"在 Vue/React 项目中安装依赖；"}),"\n",(0,r.jsx)(n.li,{children:"在 Vue/React 项目中使用依赖。"}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"步骤一用-vite-创建-vuereact-项目",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#步骤一用-vite-创建-vuereact-项目",children:"#"}),"步骤一：用 Vite 创建 Vue/React 项目"]}),"\n",(0,r.jsx)(n.p,{children:"先看第一步，直接按 Vite 官网的步骤创建项目，我这里选择了 Vue，你也可以选择 React。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"npm create vite@latest\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:c})}),"\n",(0,r.jsxs)(n.h2,{id:"步骤二用-cargo-创建一个-rust-项目",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#步骤二用-cargo-创建一个-rust-项目",children:"#"}),"步骤二：用 cargo 创建一个 Rust 项目"]}),"\n",(0,r.jsx)(n.p,{children:"创建 Vue/React 项目后，你可以在 src 目录的同级，利用 Cargo 创建一个 Rust 项目。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"# 创建 wasm-lib 项目\r\ncargo new wasm-lib --lib\n"})}),"\n",(0,r.jsx)(n.p,{children:"之后你需要给这个 Rust 项目安装 wasm-bindgen 依赖，我们可以利用它把 Rust 代码打包为 WebAssembly 模块。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"cd wasm-lib\r\n\r\n# 安装 wasm-bindgen 依赖\r\ncargo add wasm-bindgen\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:l})}),"\n",(0,r.jsx)(n.p,{children:"你新建的 wasm-lib 目录结构如下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tree",meta:"",children:".\r\n└── wasm-lib\r\n  ├──src\r\n  │ └──lib.rs\r\n  ├──Cargo.lock\r\n  └──Cargo.toml\n"})}),"\n",(0,r.jsx)(n.p,{children:"你需要清空 lib.rs 的默认代码，改成为："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",meta:"",children:'use wasm_bindgen::prelude::*;\r\n\r\n#[wasm_bindgen]\r\npub fn get_rust_message(cnt: i32) -> String {\r\n  format!("Hello Rust WebAssembly {}", cnt)\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"这段 Rust 代码的意思是，传入一个名叫 cnt 的正整数，函数会拼接一个字符串再返回。"}),"\n",(0,r.jsxs)(n.p,{children:["其中，",(0,r.jsx)(n.code,{children:"#[wasm_bindgen]"})," 宏的作用是标记 get_rust_message 函数，有了这个宏，函数就可以被导出到 WebAssembly 模块中。这样 JavaScript 就能访问这个 Rust 函数。"]}),"\n",(0,r.jsx)(n.p,{children:"然后，我们需要在 Cargo.toml 添加如下配置："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{meta:"",children:'[lib]\r\ncrate-type = ["cdylib"]\n'})}),"\n",(0,r.jsx)(n.p,{children:"它的作用是，告诉 Rust 编译器，构建这个库项目时，要生成 C 语言风格动态链接库。（C - style dynamic library，简称 cdylib）。"}),"\n",(0,r.jsxs)(n.h2,{id:"步骤三打包-rust-代码",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#步骤三打包-rust-代码",children:"#"}),"步骤三：打包 Rust 代码"]}),"\n",(0,r.jsx)(n.p,{children:"写完 Rust 代码后，你需要在 wasm-lib 目录下，全局安装 wasm-pack 打包工具。"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"cargo install wasm-pack\n"})}),"\n",(0,r.jsx)(n.p,{children:"之前的 wasm-bindgen 作用是确定 WebAssembly 和 JavaScript 的绑定关系，真正打包时还需要 wasm-pack 工具。"}),"\n",(0,r.jsx)(n.p,{children:"安转结束后，你需要输入如下命令，将 lib.rs 的代码打包成适合 web 环境使用的产物，产物的输出目录是 lib 同级的 pkg："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"wasm-pack build --target web --out-dir pkg\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:d})}),"\n",(0,r.jsx)(n.p,{children:"打包成功后，你可以看到 pkg 的目录结构为："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tree",meta:"",children:".\r\n└── wasm-lib\r\n  └── pkg\r\n    ├──package.json\r\n    ├──wasm_lib_bg.wasm\r\n    ├──wasm_lib_bg.d.ts\r\n    ├──wasm_lib.d.ts\r\n    └──wasm_lib.js\n"})}),"\n",(0,r.jsx)(n.p,{children:"可以看出生成了个 npm 包，入口文件是 wasm_lib.js，类型文件是 wasm_lib.d.ts。"}),"\n",(0,r.jsxs)(n.h2,{id:"步骤四在-vuereact-项目中安装依赖",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#步骤四在-vuereact-项目中安装依赖",children:"#"}),"步骤四：在 Vue/React 项目中安装依赖"]}),"\n",(0,r.jsx)(n.p,{children:"既然 Rust 打包得到的产物是 npm 包，你便可以在 Vue/React 项目中安转此 npm 包。"}),"\n",(0,r.jsx)(n.p,{children:"回到 Vue/React 项目目录，输入如下命令："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",meta:"",children:"npm install ./wasm-lib/pkg\n"})}),"\n",(0,r.jsx)(n.p,{children:"安装结束之后，你可以看到 package.json 的 dependencies 会多出一行配置："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{meta:"",children:'"wasm-lib": "file:wasm-lib/pkg"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["它表示 wasm-lib 这个依赖从本地的 ",(0,r.jsx)(n.code,{children:"wasm-lib/pkg"})," 目录获取。"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:h})}),"\n",(0,r.jsxs)(n.h2,{id:"步骤五在-vuereact-项目中使用依赖",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#步骤五在-vuereact-项目中使用依赖",children:"#"}),"步骤五：在 Vue/React 项目中使用依赖"]}),"\n",(0,r.jsx)(n.p,{children:"现在我们开始在 Vue/React 项目中引入之前打好的 npm 包。完整代码如下："}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",meta:"",children:"<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport init, { get_rust_message } from 'wasm-lib?init'\r\n\r\nconst cnt = ref(0)\r\nconst msg = ref('')\r\n\r\nonMounted(() => {\r\n  init()\r\n})\r\n\r\nconst onClick = () => {\r\n  cnt.value = cnt.value + 1\r\n  msg.value = get_rust_message(cnt.value)\r\n  console.log('>>>>>', msg.value)\r\n}\r\n<\/script>\r\n\r\n<template>\r\n  <p>Vue Click Cnt: {{ cnt }}</p>\r\n  <p>Rust Message: {{ msg }}</p>\r\n  <button @click=\"onClick\">Button</button>\r\n</template>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["你需要注意的是，引入 wasm-lib 时，我们写的是 ",(0,r.jsx)(n.code,{children:"wasm-lib?init"}),"。这是因为按照 ",(0,r.jsx)(n.a,{href:"https://vitejs.cn/vite3-cn/guide/features.html#webassembly",target:"_blank",rel:"noopener noreferrer",children:"vite 的文档"}),"，预编译的 WebAssembly 模块需要加上 ",(0,r.jsx)(n.code,{children:"?init"})," 来导入。"]}),"\n",(0,r.jsx)(n.p,{children:"最后结果如下："}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t})}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"}),"总结"]}),"\n",(0,r.jsx)(n.p,{children:"本文我们我通过 5 个步骤，告诉你如何在 Vue/React 项目中使用 Rust 打包的 WebAssembly 代码。"}),"\n",(0,r.jsxs)(n.p,{children:["完整代码我放在 Gitee 上，感兴趣可以下载运行：",(0,r.jsx)(n.a,{href:"https://gitee.com/lijunlin2022/vite-rust",target:"_blank",rel:"noopener noreferrer",children:"https://gitee.com/lijunlin2022/vite-rust"})]}),"\n",(0,r.jsx)(n.p,{children:"拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。"})]})}function u(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(m,e)})):m(e)}let p=u;u.__RSPRESS_PAGE_META={},u.__RSPRESS_PAGE_META["blog%2F2024%2F11%2F16%2Findex.md"]={toc:[{id:"五个步骤",text:"五个步骤",depth:2},{id:"步骤一用-vite-创建-vuereact-项目",text:"步骤一：用 Vite 创建 Vue/React 项目",depth:2},{id:"步骤二用-cargo-创建一个-rust-项目",text:"步骤二：用 cargo 创建一个 Rust 项目",depth:2},{id:"步骤三打包-rust-代码",text:"步骤三：打包 Rust 代码",depth:2},{id:"步骤四在-vuereact-项目中安装依赖",text:"步骤四：在 Vue/React 项目中安装依赖",depth:2},{id:"步骤五在-vuereact-项目中使用依赖",text:"步骤五：在 Vue/React 项目中使用依赖",depth:2},{id:"总结",text:"总结",depth:2}],title:"如何结合 Vite 和 Rust，在 Vue/React 中运行 WebAssembly 模块？",frontmatter:{}}},95895:function(e,n,s){s.d(n,{Z:function(){return l}});var r=s(85893),a=s(67294),i=s(45687);s(6175);let t={"zh-CN":e=>`预计阅读时间: ${e.minutes>=1?`${Math.ceil(e.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function c(e,n,s){let r=Object.keys(t).includes(n)?n:s;return t[r](e)}let l=e=>{let{defaultLocale:n="en-US"}=e,s=(0,i.Vi)().page.readingTimeData,t=(0,i.Jr)(),l=(0,i.e7)(),[d,h]=(0,a.useState)(c(s,t,n));return(0,a.useEffect)(()=>{h(c(s,t,n))},[t,s]),(0,r.jsx)("span",{"data-dark":String(l),className:"rp-reading-time",children:d})}}}]);