"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["1605"],{1946:function(n,e,r){r.r(e),r.d(e,{default:()=>j});var s=r("5893"),i=r("65");let d=r.p+"static/image/dist.f6565cb6.png",t=r.p+"static/image/build.91746822.png",h=r.p+"static/image/cross-env.32d9020f.png",c=r.p+"static/image/vite-h5-version.33122e54.png",l=r.p+"static/image/vite-demo.d32e4b8f.png";function a(n){let e=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",code:"code",img:"img",ol:"ol",h3:"h3",strong:"strong",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"对比静态替换和动态插入标签vite-打包-h5-注入版本号哪种方式更优雅",children:["对比静态替换和动态插入标签，Vite 打包 H5 注入版本号哪种方式更优雅？",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#对比静态替换和动态插入标签vite-打包-h5-注入版本号哪种方式更优雅",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"日常维护 H5 时，你可能有一个诉求，在 H5 发布时带上版本号。这样发现报错时，版本号可以辅助你排查错误；上线优化措施时，版本号可以辅助你观测性能……"}),"\n",(0,s.jsx)(e.p,{children:"本文我会告诉你 Vite 在 H5 注入版本号的两种方式，并对比它们的优劣。"}),"\n",(0,s.jsx)(e.p,{children:"拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。"}),"\n",(0,s.jsxs)(e.h2,{id:"静态替换和动态插入标签",children:["静态替换和动态插入标签",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#静态替换和动态插入标签",children:"#"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["静态替换，利用 Vite 的 .env 文件和 ",(0,s.jsx)(e.code,{children:"import.meta.env"})," 对象，打包时直接替换 js 代码、Vue 模板中的变量"]}),"\n",(0,s.jsxs)(e.li,{children:["动态插入标签，利用 Vite 插件和 ",(0,s.jsx)(e.code,{children:"tansformIndexHtml"})," 钩子，打包时往 HTML 里插入标签"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"为了方便理解，下面演示这两种方法。首先用 Vite 新建一个 Demo，出于习惯我这里直接选择了 React，你也可以选择 Vue。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:l,alt:""})}),"\n",(0,s.jsxs)(e.h2,{id:"静态替换的流程",children:["静态替换的流程",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#静态替换的流程",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"静态替换主要分为三个步骤："}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"在 .env 文件写入变量"}),"\n",(0,s.jsx)(e.li,{children:"在 js 代码中替换变量"}),"\n",(0,s.jsx)(e.li,{children:"上报版本号给监控 SDK"}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"在-env-文件写入变量",children:["在 .env 文件写入变量",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#在-env-文件写入变量",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["需要注意的是，",(0,s.jsx)(e.strong,{children:"只有以 VITE_ 为前缀的变量才会暴露给经过 vite 处理的代码"}),"。你可以把版本号命名为 ",(0,s.jsx)(e.code,{children:"Vite_H5_VERSION"}),"。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"VITE_H5_VERSION=0.0.1\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"在-js-代码中替换变量",children:["在 js 代码中替换变量",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#在-js-代码中替换变量",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["你可以在 vite 需要处理的代码中，直接使用 ",(0,s.jsx)(e.code,{children:"import.meta.env.VITE_H5_VERSION"}),"。比如在 main.jsx 中直接打印它。"]}),"\n",(0,s.jsxs)(e.p,{children:["这样编译后，",(0,s.jsx)(e.code,{children:"import.meta.env.VITE_H5_VERSION"})," 会被自动替换。如下图所示，第三个文件是编译后的 js，可以看到变量已经被替换为版本号。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:c,alt:""})}),"\n",(0,s.jsxs)(e.h3,{id:"上报版本号给监控-sdk",children:["上报版本号给监控 SDK",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#上报版本号给监控-sdk",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"现在，你要做的就是把版本号上传到监控平台。我们以阿里云的 ARMS npm 包为例子："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const BrowserLogger = require('alife-logger')\r\n\r\nconst __bl = BrowserLogger.singleton({\r\n pid: 'xxx',\r\n // ARMS 配置应用版本号\r\n release: import.meta.env.VITE_H5_VERSION,\r\n // ... 省略\r\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"动态插入标签的流程",children:["动态插入标签的流程",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#动态插入标签的流程",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"动态插入标签也主要分为三个步骤："}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"从命令行读取版本号"}),"\n",(0,s.jsx)(e.li,{children:"插入版本号到 HTML"}),"\n",(0,s.jsx)(e.li,{children:"上报版本号给监控 SDK"}),"\n"]}),"\n",(0,s.jsxs)(e.h3,{id:"从命令行读取版本号",children:["从命令行读取版本号",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#从命令行读取版本号",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"Windows、Linux 和 Mac 系统，在命令行设置临时环境变量的写法不同，你可以在安装 cross-env 这个开发依赖。它可以让你在不同系统使用相同方式注入环境变量（比如版本号）。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:h,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"安装依赖后，你可以运行如下命令。它的作用是往 process-env 里注入变量 H5_VERSION，并执行打包。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npx cross-env H5_VERSION=0.0.1 npm run build\n"})}),"\n",(0,s.jsx)(e.p,{children:"你可以直接在 vite.config.js 中打印读取到的版本号："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"import { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\n\r\nconsole.log('H5_VERSION is ', process.env.H5_VERSION)\r\n\r\n// https://vite.dev/config/\r\nexport default defineConfig({\r\n  plugins: [react()],\r\n})\n"})}),"\n",(0,s.jsx)(e.p,{children:"可以看到，当运行 build 命令时，在 vite.config.js 内部已经读取到了 H5_VERSION。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:t,alt:""})}),"\n",(0,s.jsx)(e.p,{children:"下面，你需要把版本号插入到 HTML 中。"}),"\n",(0,s.jsxs)(e.h3,{id:"插入版本号到-html",children:["插入版本号到 HTML",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#插入版本号到-html",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["你可以使用一个 vite 官方插件钩子函数 ",(0,s.jsx)(e.a,{href:"https://vitejs.cn/vite3-cn/guide/api-plugin.html#transformindexhtml",target:"_blank",rel:"noopener noreferrer",children:"transformIndexHtml"})," 编写一个插件，它可以替换 HTML 的内容，也可以插入 js 脚本。"]}),"\n",(0,s.jsxs)(e.p,{children:["插件代码如下，transformIndexHtml 函数返回了一个对象，对象包括 html 和 tag 两个属性。不难看出，这个对象的意思就是，在 head 标签靠前的位置插入一个 script 标签，标签内容是 ",(0,s.jsx)(e.code,{children:'window.$H5_VERSION="0.0.1"'}),"。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"import { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\n\r\nfunction injectVersion () {\r\n  return {\r\n    name: 'inject-version',\r\n    transformIndexHtml(html) {\r\n      return {\r\n        html,\r\n        tags: [\r\n          {\r\n            injectTo: 'head-prepend',\r\n            tag: 'script',\r\n            children: `window.$H5_VERSION = \"${process.env.H5_VERSION}\"`\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default defineConfig({\r\n  plugins: [react(), injectVersion()],\r\n})\n"})}),"\n",(0,s.jsx)(e.p,{children:"你可以再次启动打包，就能看到 dist 的产物中已经有了插入版本号的脚本。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)("img",{src:d,alt:""})}),"\n",(0,s.jsxs)(e.h3,{id:"上报版本号给监控-sdk-1",children:["上报版本号给监控 SDK",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#上报版本号给监控-sdk-1",children:"#"})]}),"\n",(0,s.jsxs)(e.p,{children:["因为版本号脚本在 head 标签最顶层，会最早执行，所以你之后在 HTML、React 中都可以用 ",(0,s.jsx)(e.code,{children:"window.$H5_VERSION"})," 获取版本号。"]}),"\n",(0,s.jsx)(e.p,{children:"现在，你要做的就是把版本号上传到监控平台。"}),"\n",(0,s.jsxs)(e.p,{children:["以阿里云的错误监控 ARMS 为例，你可以在它初始化 SDK 时给 release 取值 ",(0,s.jsx)(e.code,{children:"window.$H5_VERSION"}),"。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n  \x3c!-- ... 省略 --\x3e\r\n  <body>\r\n    <script>\r\n      !(function (c, b, d, a) {\r\n        c[a] || (c[a] = {})\r\n        c[a].config = {\r\n          pid: 'xxx',\r\n          // ARMS 配置应用版本号\r\n          release: window.$H5_VERSION,\r\n          // ... 省略\r\n        }\r\n        // ... 省略\r\n      })(window, document, 'xxx.js', '__bl')\r\n    <\/script>\r\n    \x3c!-- ...省略 --\x3e\r\n  </body>\r\n</html>\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"总结",children:["总结",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"})]}),"\n",(0,s.jsxs)(e.table,{children:["\n",(0,s.jsxs)(e.thead,{children:["\n",(0,s.jsxs)(e.tr,{children:["\n",(0,s.jsx)(e.th,{}),"\n",(0,s.jsx)(e.th,{children:"静态替换"}),"\n",(0,s.jsx)(e.th,{children:"动态插入标签"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.tbody,{children:["\n",(0,s.jsxs)(e.tr,{children:["\n",(0,s.jsx)(e.td,{children:(0,s.jsx)(e.strong,{children:"读入变量方式"})}),"\n",(0,s.jsx)(e.td,{children:"从 .env 文件读入"}),"\n",(0,s.jsx)(e.td,{children:"从命令行读取"}),"\n"]}),"\n",(0,s.jsxs)(e.tr,{children:["\n",(0,s.jsx)(e.td,{children:(0,s.jsx)(e.strong,{children:"替换变量方式"})}),"\n",(0,s.jsx)(e.td,{children:"利用 vite 替换"}),"\n",(0,s.jsx)(e.td,{children:"利用插入标签替换"}),"\n"]}),"\n",(0,s.jsxs)(e.tr,{children:["\n",(0,s.jsx)(e.td,{children:(0,s.jsx)(e.strong,{children:"使用变量的地方"})}),"\n",(0,s.jsx)(e.td,{children:"vite 处理后的 js 文件"}),"\n",(0,s.jsx)(e.td,{children:"html、js 均可"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"总结来看，动态插入标签，可以在 HTML 里使用变量，对 cdn 引入的 js、npm 包引入的 js 使用都很友好，我认为这是一种更优雅的方式。"}),"\n",(0,s.jsx)(e.p,{children:"拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。"})]})}function x(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}let j=x;x.__RSPRESS_PAGE_META={},x.__RSPRESS_PAGE_META["blog%2F2024%2F10%2F29%2Findex.md"]={toc:[{text:"静态替换和动态插入标签",id:"静态替换和动态插入标签",depth:2},{text:"静态替换的流程",id:"静态替换的流程",depth:2},{text:"在 .env 文件写入变量",id:"在-env-文件写入变量",depth:3},{text:"在 js 代码中替换变量",id:"在-js-代码中替换变量",depth:3},{text:"上报版本号给监控 SDK",id:"上报版本号给监控-sdk",depth:3},{text:"动态插入标签的流程",id:"动态插入标签的流程",depth:2},{text:"从命令行读取版本号",id:"从命令行读取版本号",depth:3},{text:"插入版本号到 HTML",id:"插入版本号到-html",depth:3},{text:"上报版本号给监控 SDK",id:"上报版本号给监控-sdk-1",depth:3},{text:"总结",id:"总结",depth:2}],title:"对比静态替换和动态插入标签，Vite 打包 H5 注入版本号哪种方式更优雅？",frontmatter:{}}}}]);