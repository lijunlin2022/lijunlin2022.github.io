"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["2821"],{2785:function(s,n,e){e.r(n),e.d(n,{default:()=>x});var a=e("5893"),i=e("65");let r=e.p+"static/image/bottom-status.552ac8b8.png",t=e.p+"static/image/pdd-list.ea4ae174.gif",d=e.p+"static/image/pdd-tabs.f7c6cef0.gif",c=e.p+"static/image/pdd.b57c4033.gif";function h(s){let n=Object.assign({h1:"h1",a:"a",p:"p",img:"img",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,i.ah)(),s.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"仿百亿补贴h5-tabs-和-list-的缓存方案如何设计",children:["仿百亿补贴，H5 Tabs 和 List 的缓存方案如何设计",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#仿百亿补贴h5-tabs-和-list-的缓存方案如何设计",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"逛过百亿补贴的朋友，应该都看过下图的效果。向右滑动时，H5 会切换到新 Tab，加载新 Tab 对应的 List 数据，并把这部分数据缓存下来。"}),"\n",(0,a.jsx)(n.p,{children:"当向左滑动时，可以看到旧 Tab 对应的 List。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:c,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"这种缓存方案如何设计呢？我实现设计了一番，发现情况的确比较复杂，便总结了这篇文章。"}),"\n",(0,a.jsx)(n.p,{children:"接下来我会一步步分析百亿补贴对应的功能，并给出这些功能所需要缓存的数据。"}),"\n",(0,a.jsx)(n.p,{children:"拳打 H5，脚踢小程序。我是「小霖家的混江龙」，关注我，带你了解更多实用的 H5、小程序武学。"}),"\n",(0,a.jsxs)(n.h2,{id:"tabs-如何缓存",children:["Tabs 如何缓存",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#tabs-如何缓存",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"我们首先看下 Tabs 的功能。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:d,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"拼多多的 Tabs 分一级 Tab 和二级 Tab，二级 Tab 还可以展开和收缩。并且切换一级 Tab 时，之前选中的二级 Tab 还能被保留。因此，我们需要记录的一个是二级 Tab 的数据，一个是选中的二级 Tab 下标，还有一个是二级 Tab 是否展开。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const tabs = [{\r\n  id: '',\r\n  name: '',\r\n  subTabs: [{ id: '', name: '' }],\r\n  subIndex: 0,\r\n  subExpanded: false\r\n}]\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"list-如何缓存",children:["List 如何缓存",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#list-如何缓存",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"第一页的状态",children:["第一页的状态",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#第一页的状态",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"我们再来看下列表的状态。"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:t,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"可以看到，第一页列表出于加载中时，会展示骨架屏；加载完成后，会直接展示数据。此外，我们还需要考虑到接口失败的情况。于是我们需要一个标记，来展示列表的状态。这个标记可以记为 status。"}),"\n",(0,a.jsx)(n.p,{children:"status 有三种状态，分别是 loading（加载中）、finish（加载完毕）、error（加载失败）。我们把 status 再添加到需要缓存的字段中："}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const tabs = [{\r\n  id: '',\r\n  name: '',\r\n  subTabs: [{ id: '', name: '' }],\r\n  subIndex: 0,\r\n  subExpanded: false,\r\n  list: [],\r\n  status: 'loading'\r\n}]\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"加载更多的状态",children:["加载更多的状态",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#加载更多的状态",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)("img",{src:r,alt:""})}),"\n",(0,a.jsx)(n.p,{children:"再看列表底部的状态，目前能看到的状态是一个加载完成的状态，还有一个加载中的状态。"}),"\n",(0,a.jsx)(n.p,{children:"不过加载更多的状态，不适合完全套用之前列表 status 的三种状态。"}),"\n",(0,a.jsx)(n.p,{children:"当列表第一页时，底部状态应该是不展示的。我把底部状态设计为四种，分别是："}),"\n",(0,a.jsx)(n.p,{children:"init（初始状态）、loading（加载中）、no_more（没有更多了）和 error（加载失败）。因此我们的缓存状态，需要再添加一个 bottomStatus 状态。"}),"\n",(0,a.jsx)(n.p,{children:"接下俩我们需要考虑，当加载下一页时，我们需要知道已经加载了多少页，所以我们还需要记录 pageIndex 这个状态。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const tabs = [{\r\n  id: '',\r\n  name: '',\r\n  subTabs: [{ id: '', name: '' }],\r\n  subIndex: 0,\r\n  subExpanded: false,\r\n  list: [],\r\n  status: 'loading',\r\n  pageIndex: 0,\r\n  bottomStatus: 'init'\r\n}]\n"})})]})}function l(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),s.components);return n?(0,a.jsx)(n,{...s,children:(0,a.jsx)(h,{...s})}):h(s)}let x=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["tmp%2F_2024-03-23-ten-billion-subsidy-cache-tab-data%2Findex.md"]={toc:[{text:"Tabs 如何缓存",id:"tabs-如何缓存",depth:2},{text:"List 如何缓存",id:"list-如何缓存",depth:2},{text:"第一页的状态",id:"第一页的状态",depth:3},{text:"加载更多的状态",id:"加载更多的状态",depth:3}],title:"仿百亿补贴，H5 Tabs 和 List 的缓存方案如何设计",frontmatter:{}}}}]);