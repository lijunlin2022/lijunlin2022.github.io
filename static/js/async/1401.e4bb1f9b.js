"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["1401"],{8653:function(e,n,r){r.r(n),r.d(n,{default:function(){return i}});var d=r(5893),l=r(65);function s(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",strong:"strong",ul:"ul",li:"li",code:"code",pre:"pre"},(0,l.ah)(),e.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(n.h1,{id:"布尔操作符",children:["布尔操作符",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#布尔操作符",children:"#"})]}),"\n",(0,d.jsxs)(n.h2,{id:"逻辑与",children:["逻辑与",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#逻辑与",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"逻辑与操作遵循如下真值表："}),"\n",(0,d.jsxs)(n.table,{children:["\n",(0,d.jsxs)(n.thead,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.th,{children:"第一个操作数"}),"\n",(0,d.jsx)(n.th,{children:"第二个操作数"}),"\n",(0,d.jsx)(n.th,{children:"结果"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.tbody,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["逻辑与操作符可用于任何类型的操作数，不限于布尔值。",(0,d.jsx)(n.strong,{children:"如果有操作数不是布尔值"}),"，",(0,d.jsx)(n.strong,{children:"则逻辑与并不一定会返回布尔值"}),"，而是遵循如下规则："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"如果第一个操作数是对象，则返回第二个操作数"}),"\n",(0,d.jsx)(n.li,{children:"如果第二个操作数是对象，则只有第一个操作数求值为 true 才会返回该对象"}),"\n",(0,d.jsx)(n.li,{children:"如果两个操作数都是对象，则返回第二个操作数"}),"\n",(0,d.jsx)(n.li,{children:"如果有一个操作数是 null，则返回 null"}),"\n",(0,d.jsxs)(n.li,{children:["如果有一个操作数是 ",(0,d.jsx)(n.code,{children:"NaN"}),"，则返回 ",(0,d.jsx)(n.code,{children:"NaN"})]}),"\n",(0,d.jsx)(n.li,{children:"如果有一个操作数是 undefined，则返回 undefined"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"逻辑与操作符是一种短路运算符"}),"，意思就是",(0,d.jsx)(n.strong,{children:"如果第一个操作数决定了结果"}),"，",(0,d.jsx)(n.strong,{children:"那么就永远不会对第二个操作数求值"}),"。"]}),"\n",(0,d.jsx)(n.p,{children:"对于逻辑与来说，如果第一个操作数是 false，那么无论第二个操作数是什么值，结果也不可能等于 true。"}),"\n",(0,d.jsx)(n.p,{children:"举例如下："}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"let found = true\r\nlet result = (found && someUndeclaredVariable)		// 这里会出错\r\nconsole.log(result)		// 不会执行这一行\r\n\r\n// 变量 found 的值是 true，逻辑与操作符会继续求值变量 someUndeclaredVariable\r\n// 由于 someUndeclaredVariable 没有定义，不能对它应用逻辑与操作符，因此就报错了\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"let found = false\r\nlet result = (found && someUndeclaredVariable)		// 不会出错\r\nconsole.log(result)		// 会执行\r\n\r\n// 即使 someUndeclaredVariable 没有定义，由于第一个操作数是 false，逻辑与操作符也不会对它求值\n"})}),"\n",(0,d.jsxs)(n.h2,{id:"逻辑或",children:["逻辑或",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#逻辑或",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"逻辑或遵循如下真值表："}),"\n",(0,d.jsxs)(n.table,{children:["\n",(0,d.jsxs)(n.thead,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.th,{children:"第一个操作符"}),"\n",(0,d.jsx)(n.th,{children:"第二个操作符"}),"\n",(0,d.jsx)(n.th,{children:"结果"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.tbody,{children:["\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n",(0,d.jsx)(n.td,{children:"true"}),"\n"]}),"\n",(0,d.jsxs)(n.tr,{children:["\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n",(0,d.jsx)(n.td,{children:"false"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["与逻辑与类似，",(0,d.jsx)(n.strong,{children:"如果有一个操作数不是布尔值"}),"，",(0,d.jsx)(n.strong,{children:"那么逻辑或也不一定返回布尔值"}),"。它遵循如下规则："]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"如果第一个操作数是对象，则返回第一个操作数"}),"\n",(0,d.jsx)(n.li,{children:"如果第一个操作数求值为 false，则返回第二个操作数"}),"\n",(0,d.jsx)(n.li,{children:"如果两个操作数都是对象，则返回第一个操作数"}),"\n",(0,d.jsx)(n.li,{children:"如果两个操作数都是 null，则返回 null"}),"\n",(0,d.jsxs)(n.li,{children:["如果两个操作数都是 ",(0,d.jsx)(n.code,{children:"NaN"}),"，则返回 ",(0,d.jsx)(n.code,{children:"NaN"})]}),"\n",(0,d.jsx)(n.li,{children:"如果两个操作数都是 undefined，则返回 undefined"}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"同样与逻辑与类似，逻辑或操作数也具有短路的性质。只不过对于逻辑或而言，第一个操作数求值为 true，第二个操作数就不会被求值了。"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"let found = true\r\nlet result = (found || someUndeclaredVariable)		// 不会出错\r\nconsole.log(result)		// 会执行\r\n\r\n// 即使 someUndeclaredVariable 没有定义，由于第一个操作数是 true，逻辑或操作符也不会对它求值\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"let found = false\r\nlet result = (found || someUndeclaredVariable)		// 会出错\r\nconsole.log(result)		// 不会执行\r\n\r\n// 变量 found 的值是 false，逻辑或操作符会继续求值变量 someUndeclaredVariable\r\n// 由于 someUndeclaredVariable 没有定义，不能对它应用逻辑或操作符，因此就报错了\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"利用逻辑或的性质"}),"，",(0,d.jsx)(n.strong,{children:"可以避免给变量赋值 null 或 undefined"}),"，例如："]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"let myObject = preferredObject || backupObject\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"preferedObject"})," 包含首选的值"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"backupObject"})," 包含备用的值"]}),"\n",(0,d.jsxs)(n.li,{children:["如果 ",(0,d.jsx)(n.code,{children:"preferedObject"})," 的值不是 null 或者 undefined，则它的值回赋给 ",(0,d.jsx)(n.code,{children:"myObject"})]}),"\n",(0,d.jsxs)(n.li,{children:["如果 ",(0,d.jsx)(n.code,{children:"preferedObject"})," 的值是 null 或者 undefined，则 ",(0,d.jsx)(n.code,{children:"backupObject"})," 的值会赋给 ",(0,d.jsx)(n.code,{children:"myObject"})]}),"\n"]}),"\n",(0,d.jsxs)(n.h2,{id:"参考资料",children:["参考资料",(0,d.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考资料",children:"#"})]}),"\n",(0,d.jsx)(n.p,{children:"本节内容根据 《JavaScript 高级程序设计（第 4 版）》整理。"})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(s,{...e})}):s(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["docs%2Fjs%2F03-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%2F05-%E6%93%8D%E4%BD%9C%E7%AC%A6%2F03-%E5%B8%83%E5%B0%94%E6%93%8D%E4%BD%9C%E7%AC%A6.md"]={toc:[{text:"逻辑与",id:"逻辑与",depth:2},{text:"逻辑或",id:"逻辑或",depth:2},{text:"参考资料",id:"参考资料",depth:2}],title:"布尔操作符",frontmatter:{}}}}]);