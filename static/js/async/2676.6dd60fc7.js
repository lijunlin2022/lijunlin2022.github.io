"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["2676"],{83119:function(n,r,e){e.r(r),e.d(r,{default:function(){return d}});var a=e(85893),i=e(50065),t=e(95895);function s(n){let r=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",pre:"pre",code:"code",ul:"ul",li:"li"},(0,i.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(r.h1,{id:"指针",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#指针",children:"#"}),"指针"]}),"\n",(0,a.jsx)(t.Z,{defaultLocale:"zh-CN"}),"\n",(0,a.jsxs)(r.h2,{id:"取地址符-",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#取地址符-",children:"#"}),"取地址符 &"]}),"\n",(0,a.jsx)(r.p,{children:"变量是一种使用方便的占位符，用于引用计算机内存地址。go 语言的取地址符是 &，放到一个变量前使用就会返回相应变量的内存地址。"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func main() {\r\n  var a int = 1\r\n  fmt.Printf("变量 a 的地址: %x\\n", &a)\r\n}\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"指针定义和使用",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#指针定义和使用",children:"#"}),"指针定义和使用"]}),"\n",(0,a.jsx)(r.p,{children:"指针使用流程："}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"定义指针变量。"}),"\n",(0,a.jsx)(r.li,{children:"为指针变量赋值。"}),"\n",(0,a.jsx)(r.li,{children:"访问指针变量中指向地址的值。"}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"一个指针变量指向了一个值的内存地址。在指针类型前面加上 * 号（前缀）来获取指针所指向的内容。"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func main() {\r\n  var a int = 20   // 实际变量\r\n  var ip *int = &a // 指针变量\r\n\r\n  fmt.Printf("变量 a 的地址: %x\\n", ip)\r\n  fmt.Printf("指针 ip 存储的变量是: %d\\n", *ip)\r\n}\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"空指针",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#空指针",children:"#"}),"空指针"]}),"\n",(0,a.jsx)(r.p,{children:"当一个指针被定义后没有分配到任何变量时，它的值为 nil。nil 指针也称为空指针。"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func main() {\r\n  var ptr *int // 指针变量\r\n\r\n  fmt.Printf("空指针 %x\\n", ptr) // 空指针 0\r\n  fmt.Println(ptr == nil)     // true\r\n}\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"指针数组",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#指针数组",children:"#"}),"指针数组"]}),"\n",(0,a.jsx)(r.p,{children:"案例：指针数组，每个指针都指向一个变量。"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func main() {\r\n  a := 10\r\n  b := 20\r\n  c := 30\r\n\r\n  var ptrs [3]*int\r\n\r\n  ptrs[0] = &a\r\n  ptrs[1] = &b\r\n  ptrs[2] = &c\r\n\r\n  for i := 0; i < 3; i++ {\r\n    fmt.Printf("a[%d] = %d\\n", i, *ptrs[i])\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(r.p,{children:"案例：指针数组，每个指针都指向一个数组。"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func main() {\r\n  a := [3]string{"A", "B", "C"}\r\n  b := [3]string{"a", "b", "c"}\r\n\r\n  var ptrs [2]*[3]string\r\n\r\n  ptrs[0] = &a\r\n  ptrs[1] = &b\r\n\r\n  fmt.Printf("%v\\n", *ptrs[0])\r\n  fmt.Printf("%v\\n", *ptrs[1])\r\n}\n'})}),"\n",(0,a.jsxs)(r.h2,{id:"指针作为函数的参数",children:[(0,a.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#指针作为函数的参数",children:"#"}),"指针作为函数的参数"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func swap(num1, num2 *int) {\r\n  temp := *num1\r\n  *num1 = *num2\r\n  *num2 = temp\r\n}\r\n\r\nfunc main() {\r\n  x := 1\r\n  y := 2\r\n\r\n  fmt.Printf("x = %d, y = %d\\n", x, y) // x = 1, y = 2\r\n  swap(&x, &y)\r\n  fmt.Printf("x = %d, y = %d\\n", x, y) // x = 2, y = 1\r\n}\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-go",meta:"",children:'func changeArrWithPtr(a *[]int) []int {\r\n  *a = append(*a, 4)\r\n  return *a\r\n}\r\n\r\nfunc main() {\r\n  arr := []int{0, 1, 2, 3}\r\n\r\n  newArr := changeArrWithPtr(&arr)\r\n\r\n  fmt.Printf("%v\\n", arr)    // [0 1 2 3 4]\r\n  fmt.Printf("%v\\n", newArr) // [0 1 2 3 4]\r\n}\n'})})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,i.ah)(),n.components);return r?(0,a.jsx)(r,Object.assign({},n,{children:(0,a.jsx)(s,n)})):s(n)}let d=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["docs%2Fgo%2F07-pointer.md"]={toc:[{id:"取地址符-",text:"取地址符 &",depth:2},{id:"指针定义和使用",text:"指针定义和使用",depth:2},{id:"空指针",text:"空指针",depth:2},{id:"指针数组",text:"指针数组",depth:2},{id:"指针作为函数的参数",text:"指针作为函数的参数",depth:2}],title:"指针",frontmatter:{}}},95895:function(n,r,e){e.d(r,{Z:function(){return d}});var a=e(85893),i=e(67294),t=e(45687);e(6175);let s={"zh-CN":n=>`预计阅读时间: ${n.minutes>=1?`${Math.ceil(n.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function c(n,r,e){let a=Object.keys(s).includes(r)?r:e;return s[a](n)}let d=n=>{let{defaultLocale:r="en-US"}=n,e=(0,t.Vi)().page.readingTimeData,s=(0,t.Jr)(),d=(0,t.e7)(),[h,l]=(0,i.useState)(c(e,s,r));return(0,i.useEffect)(()=>{l(c(e,s,r))},[s,e]),(0,a.jsx)("span",{"data-dark":String(d),className:"rp-reading-time",children:h})}}}]);