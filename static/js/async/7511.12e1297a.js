"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["7511"],{46212:function(n,e,r){r.r(e),r.d(e,{default:function(){return c}});var t=r(85893),a=r(50065),l=r(95895);function i(n){let e=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code"},(0,a.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"graphql",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#graphql",children:"#"}),"graphql"]}),"\n",(0,t.jsx)(l.Z,{defaultLocale:"zh-CN"}),"\n",(0,t.jsx)(e.p,{children:"安装"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{meta:"",children:"pnpm i @apollo/client -S\n"})}),"\n",(0,t.jsx)(e.p,{children:"引入 gql 方法，定义 Query 和 Mutation 两个字符串。"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",meta:"",children:"import { gql } from '@apollo/client'\r\n\r\nexport const FIND = gql`\r\n  query find($id: String!) {\r\n    find(id: $id) {\r\n      avatar\r\n      tel\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE = gql`\r\n  mutation update($id: String!, $params: UserInput!) {\r\n    update(id: $id, params: $params)\r\n  }\r\n`\n"})}),"\n",(0,t.jsx)(e.p,{children:"使用 @apollo/client 提供的两个 hooks, useQuery 和 useMutation"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsx",meta:"",children:"import React, { useState } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport { FIND, UPDATE } from './graphql/Demo'\r\n\r\nfunction Demo() {\r\n  const [avatar, setAvatar] = useState('')\r\n  const [tel, setTel] = useState('')\r\n\r\n  const { loading, data } = useQuery(FIND, {\r\n    variables: {\r\n      id: '2b130fa8-78bf-4540-93ba-5b0960b62a76',\r\n    },\r\n  })\r\n\r\n  const [update] = useMutation(UPDATE)\r\n\r\n  const changeAvatarHandler = (v: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAvatar(v.target.value)\r\n  }\r\n\r\n  const changeTelHandler = (v: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTel(v.target.value)\r\n  }\r\n\r\n  const clickHandler = () => {\r\n    update({\r\n      variables: {\r\n        id: '2b130fa8-78bf-4540-93ba-5b0960b62a76',\r\n        params: {\r\n          avatar,\r\n          tel,\r\n        },\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>data: {JSON.stringify(data)}</p>\r\n      <p>loading: {`${loading}`}</p>\r\n      <p>\r\n        avatar:\r\n        <input type=\"text\" onChange={changeAvatarHandler} />\r\n      </p>\r\n      <p>\r\n        telephone:\r\n        <input type=\"text\" onChange={changeTelHandler} />\r\n      </p>\r\n      <button onClick={clickHandler}>更新</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Demo\n"})}),"\n",(0,t.jsx)(e.p,{children:"定义一个用于发送网络请求的 client"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",meta:"",children:"import { ApolloClient, InMemoryCache } from '@apollo/client'\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'http://localhost:3000/graphql',\r\n  cache: new InMemoryCache()\r\n})\n"})}),"\n",(0,t.jsx)(e.p,{children:"利用提供的 ApolloProvider 包裹 React 的根组件。"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-jsx",meta:"",children:"import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport { ApolloProvider } from '@apollo/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\nimport { client } from './utils/Apollo.ts'\r\n\r\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n)\n"})}),"\n",(0,t.jsx)(e.p,{children:"至此，大功告成。"})]})}function o(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(i,n)})):i(n)}let c=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["docs%2Fnestjs%2F01-graphql.md"]={toc:[],title:"graphql",frontmatter:{}}},95895:function(n,e,r){r.d(e,{Z:function(){return c}});var t=r(85893),a=r(67294),l=r(45687);r(6175);let i={"zh-CN":n=>`预计阅读时间: ${n.minutes>=1?`${Math.ceil(n.minutes)} 分钟`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function o(n,e,r){let t=Object.keys(i).includes(e)?e:r;return i[t](n)}let c=n=>{let{defaultLocale:e="en-US"}=n,r=(0,l.Vi)().page.readingTimeData,i=(0,l.Jr)(),c=(0,l.e7)(),[s,p]=(0,a.useState)(o(r,i,e));return(0,a.useEffect)(()=>{p(o(r,i,e))},[i,r]),(0,t.jsx)("span",{"data-dark":String(c),className:"rp-reading-time",children:s})}}}]);