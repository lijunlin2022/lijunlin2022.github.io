"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["2927"],{5133:function(n,e,r){r.r(e),r.d(e,{default:function(){return h}});var d=r(5893),s=r(65);function t(n){let e=Object.assign({h1:"h1",a:"a",p:"p",code:"code",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h2:"h2",pre:"pre"},(0,s.ah)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.h1,{id:"整型",children:["整型",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#整型",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["整数类型简称 ",(0,d.jsx)(e.code,{children:"整型"}),"，rust 中的整型分为有符号整型和无符号整型。"]}),"\n",(0,d.jsxs)(e.table,{children:["\n",(0,d.jsxs)(e.thead,{children:["\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.th,{children:"位长度"}),"\n",(0,d.jsx)(e.th,{children:"有符号"}),"\n",(0,d.jsx)(e.th,{children:"无符号"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.tbody,{children:["\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"8-bit"}),"\n",(0,d.jsx)(e.td,{children:"i8"}),"\n",(0,d.jsx)(e.td,{children:"u8"}),"\n"]}),"\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"16-bit"}),"\n",(0,d.jsx)(e.td,{children:"i16"}),"\n",(0,d.jsx)(e.td,{children:"u16"}),"\n"]}),"\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"32-bit"}),"\n",(0,d.jsx)(e.td,{children:"i32"}),"\n",(0,d.jsx)(e.td,{children:"u32"}),"\n"]}),"\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"64-bit"}),"\n",(0,d.jsx)(e.td,{children:"i64"}),"\n",(0,d.jsx)(e.td,{children:"u64"}),"\n"]}),"\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"128-bit"}),"\n",(0,d.jsx)(e.td,{children:"i128"}),"\n",(0,d.jsx)(e.td,{children:"u128"}),"\n"]}),"\n",(0,d.jsxs)(e.tr,{children:["\n",(0,d.jsx)(e.td,{children:"arch"}),"\n",(0,d.jsx)(e.td,{children:"isize"}),"\n",(0,d.jsx)(e.td,{children:"usize"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h2,{id:"整型互相转换",children:["整型互相转换",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#整型互相转换",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:[(0,d.jsx)(e.code,{children:"as"})," 操作符可以将让整型互相转换。"]}),"\n",(0,d.jsxs)(e.h2,{id:"数字转字符串",children:["数字转字符串",(0,d.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#数字转字符串",children:"#"})]}),"\n",(0,d.jsxs)(e.p,{children:["我们可以直接使用 ",(0,d.jsx)(e.code,{children:"to_string()"})," 方法将数字转换为字符串。"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-rust",children:'fn main() {\r\n    let num: i32 = 12345;\r\n    let num_string: String = num.to_string();\r\n    println!("Number as string: {}", num_string);\r\n}\n'})})]})}function i(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(t,{...n})}):t(n)}let h=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["docs%2Frust%2F02-Rust%20%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5%2F01-integer.md"]={toc:[{text:"整型互相转换",id:"整型互相转换",depth:2},{text:"数字转字符串",id:"数字转字符串",depth:2}],title:"整型",frontmatter:{}}}}]);