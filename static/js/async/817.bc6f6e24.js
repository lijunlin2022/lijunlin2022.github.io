"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["817"],{5155:function(n,e,r){r.r(e),r.d(e,{default:function(){return l}});var i=r(5893),a=r(65);function t(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",pre:"pre",code:"code",ul:"ul",li:"li"},(0,a.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"函数与类",children:["函数与类",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#函数与类",children:"#"})]}),"\n",(0,i.jsxs)(e.h2,{id:"函数与默认参数",children:["函数与默认参数",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#函数与默认参数",children:"#"})]}),"\n",(0,i.jsx)(e.p,{children:"在 Python 里面，函数的参数可以有默认值。当调用函数的时候不写参数时，函数就会使用默认参数。请看下面的代码："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def get_input_with_default_para(split_char = ', '):\r\n  input_string = input('请输入由{}分隔的两个非零整数：'.format(split_char))\r\n  a_string, b_string = input_string.split(split_char)\r\n  return int(a_string), int(b_string)\r\n\r\nc, d = get_input_with_default_para()\r\nprint('第一个参数是 {}, 第二个参数是 {}'.format(c, d))\n"})}),"\n",(0,i.jsx)(e.p,{children:"函数也可以有多个默认参数，例如如下的代码："}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"def print_x_y_z(x = 100, y = 0, z = 50):\r\n  print('x的值为{}, y的值为{}, z的值为{}'.format(x, y, z))\r\n\r\nprint_x_y_z(1, 2, 3) # 直接写上 3 个参数，从左到右依次赋值\r\nprint_x_y_z(6) # 只写一个值的时候，优先赋值给左边的参数\r\nprint_x_y_z(y = -8) # 也可以指定参数的名字，将值直接赋给指定的参数\r\nprint_x_y_z(y = '哈哈', x = '嘿嘿') # 如果指定了参数名，那么参数顺序就无关紧要\n"})}),"\n",(0,i.jsxs)(e.h2,{id:"类与面向对象",children:["类与面向对象",(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#类与面向对象",children:"#"})]}),"\n",(0,i.jsxs)(e.p,{children:["在 Python 中使用关键字 ",(0,i.jsx)(e.code,{children:"class"})," 来定义一个类。类一般由以下元素构成："]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"类名"}),"\n",(0,i.jsx)(e.li,{children:"父类"}),"\n",(0,i.jsx)(e.li,{children:"初始化方法（在有些编程语言中叫作构造函数）"}),"\n",(0,i.jsx)(e.li,{children:"属性"}),"\n",(0,i.jsx)(e.li,{children:"方法"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:"class People(object):\r\n  def __init__(self, name, age):\r\n    self.name = name\r\n    self.age = age\r\n    self.jump()\r\n\r\n  def walk(self):\r\n    print('我的名字叫作：{}，我正在走路'.format(self.name))\r\n\r\n  def eat(self):\r\n    print('我的名字叫作：{}，我正在吃饭'.format(self.name))\r\n\r\n  def jump(self):\r\n    print('我的名字叫作：{}，我跳了一下'.format(self.name))\r\n\r\nxiaoer = People('王小二', 18)\r\nzhangsan = People('张三', 30)\r\n\r\nprint('=============获取对象的属性=============')\r\nprint(xiaoer.name)\r\nprint(zhangsan.age)\r\n\r\nprint('=============执行对象的方法==============')\r\nxiaoer.walk()\r\nzhangsan.eat()\n"})})]})}function s(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,a.ah)(),n.components);return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(t,{...n})}):t(n)}let l=s;s.__RSPRESS_PAGE_META={},s.__RSPRESS_PAGE_META["docs%2Fpython%2F02-function-and-class.md"]={toc:[{text:"函数与默认参数",id:"函数与默认参数",depth:2},{text:"类与面向对象",id:"类与面向对象",depth:2}],title:"函数与类",frontmatter:{}}}}]);