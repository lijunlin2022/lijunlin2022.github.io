"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([["2882"],{5532:function(e,n,r){r.r(n),r.d(n,{default:function(){return i}});var s=r(5893),t=r(65);function l(e){let n=Object.assign({h1:"h1",a:"a",ul:"ul",li:"li",code:"code",pre:"pre"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"正则表达式",children:["正则表达式",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#正则表达式",children:"#"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"replace_all()"})," 可以替换掉所有正则表达式匹配到的字符。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust,ignore",children:'use regex::Regex;\r\n\r\nfn main() {\r\n    let s: &str = "abcdefghijklmn";\r\n    let re: Regex = Regex::new(r"\\w").unwrap();\r\n    let new_s: String = re.replace_all(s, "-").to_string();\r\n    print!("{}", new_s);\r\n}\n'})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}let i=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["docs%2Frust%2F02-Rust%20%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5%2F03-regex.md"]={toc:[],title:"正则表达式",frontmatter:{}}}}]);